<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

  <!-- xml schema defining structure of a GNDS file
       author: mattoon1@llnl.gov
       IM #: LLNL-MI-491437
       versions:
       - version 2.0, November 2021
       - version 1.10, June 2019
       - version 1.9, March 2018
       - version 1.8, June 2017
       - version 1.7, December 2015
       - version 1.3, April 2014
       - version 1.2, March 2013
       - version 1.0, November 2011
       - version 0.2, July 2011
       - version 0.1, November 2010

       this schema can be used to validate that a gnds file has the correct structure:
       >xmllint -schema gnds.xsd filename.gnds.xml  # may wish to use the '-noout' and '-huge' options

       Find definitions of some common data containers at the end of the schema. 
       For example, a crossSection element often contains pointwise or piecewise data,
       which inherit from the 'xData_XYs1d' and 'xData_regions_1d' data containers. -->


  <!-- We start by defining <reactionSuite>, the root element of a GNDS file.
       A reactionSuite contains
       - one each of:
         'externalFiles'
         'styles' (may be 'evaluated', 'processed', etc)
         'PoPs' (properties of particles database, describing all particles involved in each reaction)
         'resonances' (optional)
         'reactions' (contains all reactions whose cross section sums to total)
         'orphanProducts' (optional. For products, typically photons, whose reaction of origin is unknown)
         'sums' (optional. Defines summed cross sections and multiplicities, e.g. 'total')
         'fissionComponents' (optional. For 1st-, 2nd-, etc fissions, to avoid double-counting if total is present)
         'productions' (optional. Stores production cross section for radioactive products)
         'incompleteReactions' (optional. Mainly used for sub-actinide fission)
         'applicationData' (optional. Allows storing additional application-specific information that only some
             users may utilize)
  -->

  <xs:element name="reactionSuite">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="externalFiles" type="externalFiles" minOccurs="0"/>
        <xs:element name="styles" type="styles"/>
        <xs:element ref="PoPs"/>
        <xs:element ref="resonances" minOccurs="0"/>
        <xs:element name="reactions" type="reactions"/>
        <xs:element name="orphanProducts" type="orphanProducts" minOccurs="0"/>
        <xs:element name="sums" type="sums" minOccurs="0"/>
        <xs:element name="fissionComponents" type="fissionComponents" minOccurs="0"/>
        <xs:element name="productions" type="productions" minOccurs="0"/>
        <xs:element name="incompleteReactions" type="incompleteReactions" minOccurs="0"/>
        <xs:element name="applicationData" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="institution" minOccurs="0" maxOccurs="unbounded"/>
              <!-- content of 'institution' is deliberately left unspecified -->
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="projectile" type="xs:NCName" use="required"/>
      <xs:attribute name="target" type="xs:NCName" use="required"/>
      <xs:attribute name="evaluation" type="xs:string" use="required"/>
      <xs:attribute name="projectileFrame" type="frame" use="required"/>
      <xs:attribute name="interaction" type="interaction" use="required"/>
      <xs:attribute name="format" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>

    <xs:simpleType name="interaction">
      <xs:restriction base="xs:string">
        <xs:enumeration value="nuclear"/>
        <xs:enumeration value="atomic"/>
        <xs:enumeration value="thermalNeutronScatteringLaw"/>
      </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="styles">
      <xs:choice maxOccurs="unbounded">
        <xs:element name="evaluated">
          <xs:complexType>
            <xs:all>
              <xs:element name="temperature" type="PhysicalQuantity"/>
              <xs:element name="projectileEnergyDomain">
                <xs:complexType>
                  <xs:attribute name="min" type="xs:double" use="required"/>
                  <xs:attribute name="max" type="xs:double" use="required"/>
                  <xs:attribute name="unit" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="documentation" type="documentation"/>
            </xs:all>
            <xs:attribute name="label" type="xs:NCName" use="required"/>
            <xs:attribute name="library" type="xs:string" use="required"/>
            <xs:attribute name="version" use="required"/>
            <xs:attribute name="date" type="xs:date" use="required"/>
            <xs:attribute name="derivedFrom" type="xs:string"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="crossSectionReconstructed">
          <xs:complexType>
            <xs:all>
              <xs:element name="temperature" type="PhysicalQuantity" minOccurs="0"/>
              <xs:element name="documentation" type="documentation" minOccurs="0"/>
            </xs:all>
            <xs:attribute name="label" type="xs:NCName" use="required"/>
            <xs:attribute name="date" type="xs:date" use="required"/>
            <xs:attribute name="derivedFrom" type="xs:string" use="required"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="heated">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="temperature" type="PhysicalQuantity"/>
              <xs:element name="documentation" type="documentation" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute name="label" type="xs:NCName" use="required"/>
            <xs:attribute name="date" type="xs:date" use="required"/>
            <xs:attribute name="derivedFrom" type="xs:string" use="required"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="averageProductData">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="temperature" type="PhysicalQuantity"/>
              <xs:element name="documentation" type="documentation" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute name="label" type="xs:NCName" use="required"/>
            <xs:attribute name="date" type="xs:date" use="required"/>
            <xs:attribute name="derivedFrom" type="xs:string" use="required"/>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>

    <xs:complexType name="externalFiles">
      <xs:sequence>
        <xs:element name="externalFile" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="label" type="xs:NCName" use="required"/>
            <xs:attribute name="path" type="xs:string" use="required"/>
            <xs:attribute name="checksum" type="xs:string"/>
            <xs:attribute name="algorithm" type="xs:string"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="documentation">
      <xs:all>
        <xs:element name="authors">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="author" type="author" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="contributors" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="contributor" type="contributor" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="collaborations" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="collaboration" type="collaboration" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="dates">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="date" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:attribute name="dateType" type="dateType" use="required"/>
                  <xs:attribute name="value" type="date" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="copyright" minOccurs="0">
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="nodeWithText">
                <xs:attribute name="href" type="xs:anyURI"/>
              </xs:extension>
            </xs:complexContent>
          </xs:complexType>
        </xs:element>
        <xs:element name="acknowledgements" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="acknowledgement" type="nodeWithText_labelRequired" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="keywords" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="keyword" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:complexContent>
                    <xs:extension base="nodeWithText">
                      <xs:attribute name="type" type="keywordType" use="required"/>
                    </xs:extension>
                  </xs:complexContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="relatedItems" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="relatedItem" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:attribute name="name" type="xs:string" use="required"/>
                  <xs:attribute name="href" type="xs:anyURI"/>
                  <xs:attribute name="relationType" type="relationType"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="title" type="nodeWithText"/>
        <xs:element name="abstract" type="nodeWithText" minOccurs="0"/>
        <xs:element name="body" type="nodeWithText"/>
        <xs:element name="computerCodes" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="computerCode" type="computerCode" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="experimentalDataSets" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="exforDataSets">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="exforDataSet" type="exforDataSet" maxOccurs="unbounded"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="bibliography" type="bibliography" minOccurs="0"/>
        <xs:element name="endfCompatible" type="nodeWithText" minOccurs="0"/>
      </xs:all>
      <xs:attribute name="doi" type="xs:string"/>
      <xs:attribute name="publicationDate" type="date"/>
      <xs:attribute name="version" type="xs:string"/>
    </xs:complexType>

    <!-- allowed values for 'dateType' in documentation/dates nodes -->
    <xs:simpleType name="dateType">
      <xs:restriction base="xs:string">
        <xs:enumeration value="accepted"/>
        <xs:enumeration value="available"/>
        <xs:enumeration value="copyrighted"/>
        <xs:enumeration value="collected"/>
        <xs:enumeration value="created"/>
        <xs:enumeration value="issued"/>
        <xs:enumeration value="submitted"/>
        <xs:enumeration value="updated"/>
        <xs:enumeration value="valid"/>
        <xs:enumeration value="withdrawn"/>
      </xs:restriction>
    </xs:simpleType>

    <!-- allowed values for 'relationType' in documentation/relatedItems nodes -->
    <xs:simpleType name="relationType">
      <xs:restriction base="xs:string">
        <xs:enumeration value="IsCitedBy"/>
        <xs:enumeration value="Cites"/>
        <xs:enumeration value="IsSupplementTo"/>
        <xs:enumeration value="IsSupplementedBy"/>
        <xs:enumeration value="IsContinuedBy"/>
        <xs:enumeration value="Continues"/>
        <xs:enumeration value="Describes"/>
        <xs:enumeration value="IsDescribedBy"/>
        <xs:enumeration value="HasMetaData"/>
        <xs:enumeration value="IsMetadataFor"/>
        <xs:enumeration value="HasVersion"/>
        <xs:enumeration value="IsVersionOf"/>
        <xs:enumeration value="IsNewVersionOf"/>
        <xs:enumeration value="IsPreviousVersionOf"/>
        <xs:enumeration value="IsPartOf"/>
        <xs:enumeration value="HasPart"/>
        <xs:enumeration value="IsPublishedIn"/>
        <xs:enumeration value="IsReferencedBy"/>
        <xs:enumeration value="References"/>
        <xs:enumeration value="IsDocumentedBy"/>
        <xs:enumeration value="Documents"/>
        <xs:enumeration value="IsCompiledBy"/>
        <xs:enumeration value="Complies"/>    <!-- FIXME typo in GNDS-2.0 specs? See Issue #113 on NEA repo -->
        <xs:enumeration value="IsVariantFormOf"/>
        <xs:enumeration value="IsOriginalFormOf"/>
        <xs:enumeration value="IsIdenticalTo"/>
        <xs:enumeration value="IsReviewedBy"/>
        <xs:enumeration value="Reviews"/>
        <xs:enumeration value="IsDerivedFrom"/>
        <xs:enumeration value="IsSourceOf"/>
        <xs:enumeration value="IsRequiredBy"/>
        <xs:enumeration value="Requires"/>
        <xs:enumeration value="Obsoletes"/>
        <xs:enumeration value="IsObsoletedBy"/>
      </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="nodeWithText" mixed="true">
      <xs:attribute name="encoding" type="textEncoding"/>
      <xs:attribute name="markup" type="textMarkup"/>
      <xs:attribute name="label" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="nodeWithText_labelRequired" mixed="true">
      <xs:attribute name="encoding" type="textEncoding"/>
      <xs:attribute name="markup" type="textMarkup"/>
      <xs:attribute name="label" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="nodeWithText_and_filename" mixed="true">
      <xs:attribute name="encoding" type="textEncoding"/>
      <xs:attribute name="markup" type="textMarkup"/>
      <xs:attribute name="label" type="xs:string"/>
      <xs:attribute name="filename" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="affiliations">
      <xs:sequence>
        <xs:element name="affiliation" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="name" type="xs:string" use="required"/>
            <xs:attribute name="href" type="xs:anyURI"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="author">
      <xs:sequence>
        <xs:element name="affiliations" type="affiliations" minOccurs="0"/>
        <xs:element name="note" type="nodeWithText" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute name="orcid" type="xs:string"/>  <!-- FIXME define pattern for orcid? -->
      <xs:attribute name="email" type="xs:string"/>  <!-- FIXME define pattern for email? -->
    </xs:complexType>

    <xs:complexType name="contributor">
      <xs:sequence>
        <xs:element name="affiliations" type="affiliations" minOccurs="0"/>
        <xs:element name="note" type="nodeWithText" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="name" type="xs:NCName" use="required"/>
      <xs:attribute name="contributorType" type="contributorType" use="required"/>
      <xs:attribute name="orcid" type="xs:string"/>  <!-- FIXME define pattern for orcid? -->
      <xs:attribute name="email" type="xs:NCName"/>
    </xs:complexType>

    <xs:simpleType name="contributorType">
      <xs:restriction base="xs:string">
        <xs:enumeration value="ContactPerson"/>
        <xs:enumeration value="DataCollector"/>
        <xs:enumeration value="DataCurator"/>
        <xs:enumeration value="DataManager"/>
        <xs:enumeration value="Distributor"/>
        <xs:enumeration value="Editor"/>
        <xs:enumeration value="HostingInstitution"/>
        <xs:enumeration value="Producer"/>
        <xs:enumeration value="ProjectLeader"/>
        <xs:enumeration value="ProjectManager"/>
        <xs:enumeration value="ProjectMember"/>
        <xs:enumeration value="RegistrationAgency"/>
        <xs:enumeration value="RegistrationAuthority"/>
        <xs:enumeration value="RelatedPerson"/>
        <xs:enumeration value="Researcher"/>
        <xs:enumeration value="ResearchGroup"/>
        <xs:enumeration value="RightsHolder"/>
        <xs:enumeration value="Sponsor"/>
        <xs:enumeration value="Supervisor"/>
        <xs:enumeration value="WorkPackageLeader"/>
        <xs:enumeration value="Other"/>
      </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="collaboration">
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute name="href" type="xs:anyURI"/>
    </xs:complexType>

    <xs:complexType name="computerCode">
      <xs:sequence>
        <xs:element name="executionArguments" type="nodeWithText" minOccurs="0"/>
        <xs:element name="codeRepo" minOccurs="0">
          <xs:complexType>
            <xs:attribute name="revisionSystem" type="xs:string" use="required"/>
            <xs:attribute name="href" type="xs:anyURI" use="required"/>
            <xs:attribute name="revisionID" type="xs:string" use="required"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="note" type="nodeWithText" minOccurs="0"/>
        <xs:element name="inputDecks">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="inputDeck" type="nodeWithText_and_filename" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="outputDecks">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="outputDeck" type="nodeWithText_and_filename" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="exforDataSet">
      <xs:sequence>
        <xs:element name="covarianceScript" type="nodeWithText" minOccurs="0"/>
        <xs:element name="correctionScript" type="nodeWithText" minOccurs="0"/>
        <xs:element name="note" type="nodeWithText" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="subentry" type="xs:string" use="required"/>
      <xs:attribute name="retrievalDate" type="date" use="required"/>
    </xs:complexType>

    <xs:complexType name="bibliography">
      <xs:sequence>
        <xs:element name="bibitem" maxOccurs="unbounded">
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="nodeWithText">
                <xs:attribute name="xref" type="xs:string" use="required"/>
              </xs:extension>
            </xs:complexContent>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>

  <!-- properties of particles, or PoPs -->
  <xs:element name="PoPs">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="parentDatabase" minOccurs="0">
          <xs:complexType>
            <xs:attribute name="href" type="xs:string" use="required"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="styles" type="PoPs_styles" minOccurs="0"/>
        <xs:element name="documentation" type="documentation" minOccurs="0"/>
        <xs:element name="aliases" type="aliases" minOccurs="0"/>
        <xs:element name="gaugeBosons" type="gaugeBosons" minOccurs="0"/>
        <xs:element name="leptons" type="leptons" minOccurs="0"/>
        <xs:element name="baryons" type="baryons" minOccurs="0"/>
        <xs:element name="chemicalElements" type="chemicalElements" minOccurs="0"/>
        <xs:element name="unorthodoxes" type="unorthodoxes" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute name="version" type="xs:string" use="required"/>
      <xs:attribute name="format" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>

    <xs:complexType name="PoPs_styles">
      <xs:choice maxOccurs="unbounded">
        <xs:element name="evaluated">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="documentation" type="documentation" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute name="label" type="xs:NCName" use="required"/>
            <xs:attribute name="library" type="xs:string" use="required"/>
            <xs:attribute name="version" use="required"/>
            <xs:attribute name="date" type="xs:date" use="required"/>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>

    <xs:complexType name="aliases">
      <xs:choice maxOccurs="unbounded">
        <xs:element name="alias">
          <xs:complexType>
            <xs:attribute name="id" type="xs:string" use="required"/>
            <xs:attribute name="pid" type="xs:string" use="required"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="metaStable">
          <xs:complexType>
            <xs:attribute name="id" type="xs:string" use="required"/>
            <xs:attribute name="pid" type="xs:string" use="required"/>
            <xs:attribute name="metaStableIndex" type="xs:integer" use="required"/>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:complexType name="gaugeBosons">
      <xs:sequence>
        <xs:element name="gaugeBoson" type="PoPs_basicParticle" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="leptons">
      <xs:sequence>
        <xs:element name="lepton" type="lepton" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>

      <xs:complexType name="lepton">
        <xs:complexContent>
          <xs:extension base="PoPs_basicParticle">
            <xs:attribute name="generation" type="xs:string" use="required"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

    <xs:complexType name="baryons">
      <xs:sequence>
        <xs:element name="baryon" type="PoPs_basicParticle" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>

      <xs:complexType name="PoPs_basicParticle">
        <xs:sequence>
          <xs:element name="mass" type="PoPs_quantity"/>
          <xs:element name="spin" type="PoPs_quantity"/>
          <xs:element name="parity" type="PoPs_quantity"/>
          <xs:element name="charge" type="PoPs_quantity"/>
          <xs:element name="halflife" type="PoPs_quantity"/>
          <xs:element name="decayData" type="PoPs_decayData" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>

      <xs:complexType name="PoPs_quantity">
        <xs:choice>
          <xs:element name="double" type="PQU_double"/>
          <xs:element name="integer" type="PQU_integer"/>
          <xs:element name="fraction" type="PQU_fraction"/>
          <xs:element name="string" type="PQU_string"/>
        </xs:choice>
      </xs:complexType>

    <xs:complexType name="chemicalElements">
      <xs:sequence>
        <xs:element maxOccurs="unbounded" name="chemicalElement" type="chemicalElement"/>
      </xs:sequence>
    </xs:complexType>

      <xs:complexType name="chemicalElement">
        <xs:sequence>
          <xs:element minOccurs="0" name="atomic" type="PoPs_atomic"/>
          <xs:element minOccurs="0" name="isotopes">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="isotope" type="PoPs_isotope"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="symbol" type="xs:NMTOKEN" use="required"/>
        <xs:attribute name="Z" type="xs:integer" use="required"/>
        <xs:attribute name="name" type="xs:string" use="required"/>
      </xs:complexType>

      <xs:complexType name="PoPs_atomic">
        <xs:sequence>
          <xs:element name="configurations">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="configuration" type="PoPs_atomicConfiguration"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="PoPs_atomicConfiguration">
        <xs:sequence>
          <xs:element name="bindingEnergy" type="PoPs_quantity"/>
          <xs:element name="decayData" type="PoPs_decayData" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="subshell" use="required"/>
        <xs:attribute name="electronNumber" use="required"/>
      </xs:complexType>

      <xs:complexType name="PoPs_isotope">
        <xs:sequence>
          <xs:element minOccurs="0" name="nuclides">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="nuclide" type="PoPs_nuclide"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="symbol" type="xs:NMTOKEN" use="required"/>
        <xs:attribute name="A" type="xs:integer" use="required"/>
      </xs:complexType>

      <xs:complexType name="PoPs_nuclide">
        <xs:sequence>
          <xs:element name="mass" type="PoPs_quantity" minOccurs="0"/>
          <xs:element name="spin" type="PoPs_quantity" minOccurs="0"/>
          <xs:element name="charge" type="PoPs_quantity" minOccurs="0"/>
          <xs:element name="decayData" type="PoPs_decayData" minOccurs="0"/>
          <xs:element name="nucleus" type="PoPs_nucleus"/>
          <xs:element ref="fissionFragmentData" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:NMTOKEN" use="required"/>
      </xs:complexType>

      <xs:complexType name="PoPs_nucleus">
        <xs:sequence>
          <xs:element name="mass" type="PoPs_quantity" minOccurs="0"/>
          <xs:element name="spin" type="PoPs_quantity" minOccurs="0"/>
          <xs:element name="parity" type="PoPs_quantity" minOccurs="0"/>
          <xs:element name="charge" type="PoPs_quantity"/>
          <xs:element name="halflife" type="PoPs_quantity" minOccurs="0"/>
          <xs:element name="decays" type="PoPs_decays" minOccurs="0"/>
          <xs:element name="decayData" type="PoPs_decayData" minOccurs="0"/>
          <xs:element name="energy" type="PoPs_quantity" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:NMTOKEN"/>
        <xs:attribute name="index" type="xs:string"/> <!-- could be integer or 's', 'c' -->
      </xs:complexType>

    <xs:complexType name="unorthodoxes">
      <xs:sequence>
        <xs:element name="unorthodox" maxOccurs="unbounded">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="mass" type="PoPs_quantity" minOccurs="0"/>
              <xs:element name="charge" type="PoPs_quantity" minOccurs="0"/>
              <xs:element name="decayData" type="PoPs_decayData" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute name="id" type="xs:NMTOKEN"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PoPs_decays">
      <xs:sequence>
        <xs:element name="decay" maxOccurs="unbounded">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="probability" type="PoPs_quantity"/>
              <xs:element name="products" type="PoPs_decayProducts"/>
            </xs:sequence>
            <xs:attribute name="label" type="xs:string" use="required"/>  <!-- enumerate allowed decay types? -->
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PoPs_decayProducts">
      <xs:sequence>
        <xs:element name="product" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="label" type="xs:NMTOKEN" use="required"/>
            <xs:attribute name="pid" type="xs:NMTOKEN" use="required"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PoPs_decayData">
      <xs:sequence>
        <xs:element name="decayModes" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="decayMode" type="PoPs_decayMode" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="averageEnergies" type="PoPs_averageEnergies" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PoPs_decayMode">
      <xs:sequence>
        <xs:element name="probability" type="PoPs_quantity"/>
        <xs:element name="internalConversionCoefficients" type="PoPs_internalConversionCoefficients" minOccurs="0"/>
        <xs:element name="photonEmissionProbabilities" type="PoPs_photonEmissionProbabilities" minOccurs="0"/>
        <xs:element name="Q" type="PoPs_quantity" minOccurs="0"/>
        <xs:element name="decayPath">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="decay" type="PoPs_decay" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="spectra" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="spectrum" type="PoPs_spectrum" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="label" type="xs:string" use="required"/>
      <xs:attribute name="mode" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="PoPs_decay">
      <xs:sequence>
        <xs:element name="products" minOccurs="0"> <!-- FIXME should be required? -->
          <xs:complexType>
            <xs:sequence>
              <xs:element name="product" type="PoPs_product" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="index" type="xs:integer" use="required"/>
      <xs:attribute name="type" type="xs:string"/>
      <xs:attribute name="complete" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="PoPs_product">
      <xs:attribute name="label" type="xs:string" use="required"/>
      <xs:attribute name="pid" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="PoPs_averageEnergies">
      <xs:sequence>
        <xs:element name="averageEnergy" maxOccurs="unbounded">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="uncertainty" type="PQU_uncertainty" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute name="label" type="xs:string"/>
            <xs:attribute name="value" type="xs:double"/>
            <xs:attribute name="unit" type="xs:string"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PoPs_spectrum">
      <xs:choice maxOccurs="unbounded">
        <xs:element name="discrete" type="PoPs_discrete"/>
        <xs:element name="continuum" type="PoPs_continuum"/>
      </xs:choice>
      <xs:attribute name="label" type="xs:string" use="required"/>
      <xs:attribute name="pid" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="PoPs_discrete">
      <xs:sequence>
        <xs:element name="intensity">   <!-- FIXME should look like other PoPs quantities -->
          <xs:complexType>
            <xs:sequence>
              <xs:element name="uncertainty" type="PQU_uncertainty" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute name="value" type="xs:double"/>
            <xs:attribute name="unit" type="xs:string"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="energy">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="uncertainty" type="PQU_uncertainty" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute name="value" type="xs:double"/>
            <xs:attribute name="unit" type="xs:string"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="internalConversionCoefficients" type="PoPs_internalConversionCoefficients" minOccurs="0"/>
        <xs:element name="photonEmissionProbabilities" type="PoPs_photonEmissionProbabilities" minOccurs="0"/>
        <xs:element name="positronEmissionIntensity" type="PoPs_positronEmissionIntensity" minOccurs="0"/>
        <xs:element name="internalPairFormationCoefficient" minOccurs="0">
          <xs:complexType>
            <xs:attribute name="value" type="xs:double"/>
            <xs:attribute name="unit" type="xs:string"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="type" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="PoPs_continuum">
      <xs:sequence>
        <xs:element name="XYs1d" type="xData_XYs1d_primary"/>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PoPs_internalConversionCoefficients">
      <xs:sequence>
        <xs:element name="shell" maxOccurs="unbounded">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="uncertainty" type="PQU_uncertainty" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute name="label" type="xs:string"/>
            <xs:attribute name="value" type="xs:double"/>
            <xs:attribute name="unit" type="xs:string"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PoPs_photonEmissionProbabilities">
      <xs:sequence>
        <xs:element name="shell" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="label" type="xs:string"/>
            <xs:attribute name="value" type="xs:double"/>
            <xs:attribute name="unit" type="xs:string"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PoPs_positronEmissionIntensity">
      <xs:sequence>
        <xs:element name="uncertainty" type="PQU_uncertainty" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="value" type="xs:double" use="required"/>
    </xs:complexType>

  <!-- resonances may contain just a scattering radius, or may contain resolved/unresolved sections -->
  <xs:element name="resonances">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="documentation" type="documentation"/>
        <xs:element name="scatteringRadius" type="scatteringRadius"/>
        <xs:element minOccurs="0" name="resolved" type="resolved"/>
        <xs:element minOccurs="0" name="unresolved" type="unresolved"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

    <xs:complexType name="scatteringRadius">
      <xs:choice>
        <xs:element name="constant1d" type="xData_constant1d"/>
        <xs:element name="XYs1d" type="xData_XYs1d_primary"/>
      </xs:choice>
    </xs:complexType>

    <xs:complexType name="hardSphereRadius">
      <xs:choice>
        <xs:element name="constant1d" type="xData_constant1d"/>
      </xs:choice>
    </xs:complexType>

    <xs:complexType name="resolved">
      <xs:choice>
        <xs:element name="BreitWigner" type="BreitWigner"/>
        <xs:element name="RMatrix" type="RMatrix"/>
        <xs:element name="energyIntervals" type="energyIntervals"/>
      </xs:choice>
      <xs:attribute name="domainMin" type="xs:double" use="required"/>
      <xs:attribute name="domainMax" type="xs:double" use="required"/>
      <xs:attribute name="domainUnit" type="xs:string" use="required"/>
    </xs:complexType>

      <!-- types of resolved resonance data -->
      <xs:complexType name="BreitWigner">
        <xs:sequence>
          <xs:element ref="PoPs" minOccurs="0"/>
          <xs:element name="scatteringRadius" type="scatteringRadius" minOccurs="0"/>
          <xs:element name="resonanceParameters" type="resonanceParameters"/>
        </xs:sequence>
        <xs:attribute name="label" type="xs:string" use="required"/>
        <xs:attribute name="approximation" type="xs:string" use="required"/>
        <xs:attribute name="calculateChannelRadius" type="xs:boolean"/>
        <xs:attribute name="useForSelfShieldingOnly" type="xs:boolean"/>
      </xs:complexType>

      <xs:complexType name="RMatrix">
        <xs:sequence>
          <xs:element ref="PoPs" minOccurs="0"/>
          <xs:element name="resonanceReactions" type="resonanceReactions"/>
          <xs:element name="spinGroups">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="spinGroup" type="RML_spinGroup"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="label" type="xs:string" use="required"/>
        <xs:attribute name="approximation" type="xs:NCName" use="required"/>
        <xs:attribute name="boundaryCondition" type="allowedBoundaryConditions"/>
        <xs:attribute name="supportsAngularReconstruction" type="xs:boolean"/>
        <xs:attribute name="calculateChannelRadius" type="xs:boolean"/>
        <xs:attribute name="useForSelfShieldingOnly" type="xs:boolean"/>
        <xs:attribute name="reducedWidthAmplitudes" type="xs:boolean"/>
      </xs:complexType>

        <xs:simpleType name="allowedBoundaryConditions">
          <xs:restriction base="xs:string">
            <xs:enumeration value="EliminateShiftFunction" />
            <xs:enumeration value="NegativeOrbitalMomentum" />
            <xs:enumeration value="Brune" />
            <xs:enumeration value="Given" />
          </xs:restriction>
        </xs:simpleType>

        <!-- for R-Matrix format, specify each resonance reaction followed by list of resonances grouped by 'spinGroup' -->
        <xs:complexType name="resonanceReactions">
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="resonanceReaction" type="resonanceReaction"/>
          </xs:sequence>
        </xs:complexType>
        <xs:complexType name="resonanceReaction">
          <xs:sequence>
            <xs:element name="link" type="xlink"/>
            <xs:element name="Q" type="Q" minOccurs="0"/>
            <xs:element name="scatteringRadius" type="scatteringRadius" minOccurs="0"/>
            <xs:element name="hardSphereRadius" type="hardSphereRadius" minOccurs="0"/>
          </xs:sequence>
          <xs:attribute name="label" type="xs:string" use="required"/>
          <xs:attribute name="ejectile" type="xs:string"/>
          <xs:attribute name="boundaryConditionValue" type="xs:double"/>
          <xs:attribute name="eliminated" type="xs:boolean"/>
        </xs:complexType>
        <xs:complexType name="RML_spinGroup">
          <xs:sequence>
            <xs:element name="channels" type="RML_channels"/>
            <xs:element minOccurs="0" name="resonanceParameters" type="resonanceParameters"/>
          </xs:sequence>
          <xs:attribute name="label" type="xs:string" use="required"/>
          <xs:attribute name="spin" type="fractionAttribute" use="required"/>
          <xs:attribute name="parity" type="parityAttribute" use="required"/>
        </xs:complexType>
        <xs:complexType name="RML_channels">
          <xs:sequence>
            <xs:element name="channel" type="RML_channel" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
        <xs:complexType name="RML_channel">
          <xs:sequence>
            <xs:element name="externalRMatrix" type="externalRMatrix" minOccurs="0"/>
            <xs:element name="scatteringRadius" type="scatteringRadius" minOccurs="0"/>
            <xs:element name="hardSphereRadius" type="hardSphereRadius" minOccurs="0"/>
          </xs:sequence>
          <xs:attribute name="label" type="xs:string" use="required"/>
          <xs:attribute name="resonanceReaction" type="xs:string" use="required"/>
          <xs:attribute name="L" type="xs:integer" use="required"/>
          <xs:attribute name="channelSpin" type="fractionAttribute" use="required"/>
          <xs:attribute name="boundaryConditionValue" type="xs:double"/>
          <xs:attribute name="columnIndex" type="xs:integer" use="required"/>
        </xs:complexType>

        <xs:simpleType name="externalRMatrix_types">
          <xs:restriction base="xs:string">
            <xs:enumeration value="Froehner"/>
            <xs:enumeration value="SAMMY"/>
          </xs:restriction>
        </xs:simpleType>
        <xs:complexType name="externalRMatrix">
          <xs:sequence>
            <!-- FIXME redefine the 'double' and restrict allowed labels? -->
            <xs:element name="double" type="PQU_double" minOccurs="2" maxOccurs="7"/>
          </xs:sequence>
          <xs:attribute name="type" type="externalRMatrix_types" use="required"/>
        </xs:complexType>

    <xs:complexType name="resonanceParameters">
      <xs:sequence>
        <xs:element name="table" type="table"/>
      </xs:sequence>
    </xs:complexType>

    <!-- multiple resolved regions are currently allowed but deprecated (only in ENDF-VII Pu239 right now) --> 
    <xs:complexType name="energyIntervals">
      <xs:sequence>
        <xs:element name="energyInterval" maxOccurs="unbounded">
          <xs:complexType>
            <xs:choice>
              <xs:element name="BreitWigner" type="BreitWigner"/>
              <xs:element name="RMatrix" type="RMatrix"/>
            </xs:choice>
            <xs:attribute name="index" type="xs:integer" use="required"/>
            <xs:attribute name="domainMin" type="xs:double" use="required"/>
            <xs:attribute name="domainMax" type="xs:double" use="required"/>
            <xs:attribute name="domainUnit" type="xs:string" use="required"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="label" type="xs:string" use="required"/>
    </xs:complexType>


    <!-- unresolved resonance region -->
    <xs:complexType name="unresolved">
      <xs:choice>
        <xs:element name="tabulatedWidths" type="tabulatedWidths"/>
      </xs:choice>
      <xs:attribute name="domainMin" type="xs:double" use="required"/>
      <xs:attribute name="domainMax" type="xs:double" use="required"/>
      <xs:attribute name="domainUnit" type="xs:string" use="required"/>
    </xs:complexType>

      <!-- currently only support one format for unresolved: -->
      <xs:complexType name="tabulatedWidths">
        <xs:sequence>
          <xs:element ref="PoPs" minOccurs="0"/>
          <xs:element name="resonanceReactions" type="resonanceReactions"/>
          <xs:element name="scatteringRadius" type="scatteringRadius" minOccurs="0"/>
          <xs:element name="Ls">
            <xs:complexType>
            <xs:sequence>
              <xs:element maxOccurs="unbounded" name="L" type="URR_L_section"/>
            </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="label" type="xs:string" use="required"/>
        <xs:attribute name="approximation" type="xs:string" use="required"/>
        <xs:attribute name="useForSelfShieldingOnly" type="xs:boolean"/>
      </xs:complexType>

      <xs:complexType name="URR_L_section">
        <xs:sequence>
          <xs:element name="Js">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="J" type="URR_J_section"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="label" use="required" type="xs:string"/>
        <xs:attribute name="value" use="required" type="xs:integer"/>
      </xs:complexType>

      <xs:complexType name="URR_J_section">
        <xs:sequence>
          <xs:element name="levelSpacing" type="URR_levelSpacing"/>
          <xs:element name="widths" type="URR_widths"/>
        </xs:sequence>
        <xs:attribute name="label" use="required" type="xs:string"/>
        <xs:attribute name="value" use="required" type="fractionAttribute"/>
      </xs:complexType>

      <xs:complexType name="URR_levelSpacing">
        <xs:choice>
          <xs:element name="constant1d" type="xData_constant1d"/>
          <xs:element name="XYs1d" type="xData_XYs1d_primary"/>
          <xs:element name="regions1d" type="xData_regions_1d_primary"/>
        </xs:choice>
      </xs:complexType>

      <xs:complexType name="URR_widths">
        <xs:sequence>
          <xs:element name="width" maxOccurs="unbounded">
            <xs:complexType>
              <xs:choice>
                <xs:element name="constant1d" type="xData_constant1d"/>
                <xs:element name="XYs1d" type="xData_XYs1d_primary"/>
                <xs:element name="regions1d" type="xData_regions_1d_primary"/>
              </xs:choice>
              <xs:attribute name="label" type="xs:string" use="required"/>
              <xs:attribute name="resonanceReaction" type="xs:string" use="required"/>
              <xs:attribute name="degreesOfFreedom" type="xs:double"/>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>



  <!-- after the documentation, particles and resonances the GNDS file continues
       with '<reactions>', '<orphanProducts>', '<sums>', '<productions>' and '<fissionComponents>' elements. -->
  <xs:complexType name="reactions">
    <xs:sequence>
      <xs:element ref="reaction" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="orphanProducts">
    <xs:sequence>
      <xs:element ref="orphanProduct" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="sums">
    <xs:sequence>
      <xs:element name="crossSectionSums" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="crossSectionSum" type="crossSectionSum" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="multiplicitySums" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="multiplicitySum" type="multiplicitySum" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="fissionComponents">
    <xs:sequence>
      <xs:element ref="fissionComponent" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="productions">
    <xs:sequence>
      <xs:element ref="production" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="incompleteReactions">
    <xs:sequence>
      <xs:element name="reaction" type="incompleteReaction" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- reaction class, describes a single reaction including cross section and outputChannel
       with list of products -->
  <xs:element name="reaction">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="documentation" type="documentation" minOccurs="0"/>
        <xs:element ref="doubleDifferentialCrossSection" minOccurs="0"/>
        <xs:element ref="crossSection"/>
        <xs:element name="outputChannel" type="outputChannel"/>
      </xs:sequence>
      <xs:attribute name="label" type="xs:string" use="required"/>
      <xs:attribute name="partialReaction" type="xs:integer"/>
      <xs:attribute name="ENDF_MT" type="xs:integer" use="required"/>
      <xs:attribute name="process" type="xs:string"/>
      <xs:attribute name="fissionGenre" type="xs:NCName"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="orphanProduct">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="documentation" type="documentation" minOccurs="0"/>
        <xs:element ref="crossSection"/>
        <xs:element name="outputChannel" type="outputChannel"/>
      </xs:sequence>
      <xs:attribute name="label" type="xs:string" use="required"/>
      <xs:attribute name="ENDF_MT" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="fissionComponent">  <!-- for 1st-chance, 2nd-chance etc -->
    <xs:complexType>
      <xs:sequence>
        <xs:element name="documentation" type="documentation" minOccurs="0"/>
        <xs:element ref="crossSection"/>
        <xs:element name="outputChannel" type="fissionComponentOutputChannel"/>
      </xs:sequence>
      <xs:attribute name="label" type="xs:string" use="required"/>
      <xs:attribute name="ENDF_MT" type="xs:integer" use="required"/>
      <xs:attribute name="fissionGenre" type="xs:NCName" use="required"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="production">  <!-- for storing production cross sections -->
    <xs:complexType>
      <xs:sequence>
        <xs:element name="documentation" type="documentation" minOccurs="0"/>
        <xs:element ref="crossSection"/>
        <xs:element name="outputChannel" type="outputChannel"/>
      </xs:sequence>
      <xs:attribute name="label" type="xs:string" use="required"/>
      <xs:attribute name="ENDF_MT" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>

    <xs:complexType name="incompleteReaction">
      <xs:sequence>
        <xs:element name="documentation" type="documentation" minOccurs="0"/>
        <xs:element ref="crossSection"/>
        <xs:element name="outputChannel" type="outputChannel_optionalProducts"/>
      </xs:sequence>
      <xs:attribute name="label" type="xs:string" use="required"/>
      <xs:attribute name="ENDF_MT" type="xs:integer" use="required"/>
      <xs:attribute name="fissionGenre" type="xs:NCName"/>
    </xs:complexType>

  <!-- May want to expressly store the sum over other quantities (e.g. total cross section or total gamma multiplicity) -->
  <xs:complexType name="crossSectionSum">
    <xs:sequence>
      <xs:element name="documentation" type="documentation" minOccurs="0"/>
      <xs:element name="summands" type="summands"/>
      <xs:element name="Q" type="Q"/>
      <xs:element ref="crossSection"/>
    </xs:sequence>
    <xs:attribute name="label" type="xs:string" use="required"/>
    <xs:attribute name="ENDF_MT" type="xs:integer" use="required"/>
  </xs:complexType>

  <xs:complexType name="multiplicitySum">
    <xs:sequence>
      <xs:element name="documentation" type="documentation" minOccurs="0"/>
      <xs:element name="summands" type="summands"/>
      <xs:element name="multiplicity" type="multiplicity"/>
    </xs:sequence>
    <xs:attribute name="label" type="xs:string" use="required"/>
    <xs:attribute name="ENDF_MT" type="xs:integer" use="required"/>
  </xs:complexType>

  <xs:complexType name="summands">
    <xs:choice maxOccurs="unbounded">
      <xs:element name="add" type="xlink"/>
      <xs:element name="subtract" type="xlink"/>
    </xs:choice>
  </xs:complexType>

  <!-- contents of reaction elements: -->

  <xs:element name="crossSection">
    <xs:complexType>
      <xs:choice maxOccurs="unbounded">
        <xs:element name="XYs1d" type="xData_XYs1d_primary"/>
        <xs:element name="regions1d" type="xData_regions_1d_primary"/>
        <xs:element name="resonancesWithBackground" type="resonancesWithBackground"/>
        <xs:element name="reference" type="xlink"/>
        <xs:element name="CoulombPlusNuclearElastic" type="xlink"/>
        <xs:element name="thermalNeutronScatteringLaw1d" type="xlink"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>

    <!-- possible forms of crossSection: -->

      <xs:complexType name="resonancesWithBackground">
        <xs:sequence>
          <xs:element name="resonances" type="xlink"/>
          <xs:element name="background">
            <xs:complexType>
              <xs:choice>     <!-- must at least contain <resolvedRegion> and/or <unresolvedRegion> -->
                <xs:sequence>
                  <xs:element name="resolvedRegion" type="resonanceBackgroundTerm"/>
                  <xs:element name="unresolvedRegion" type="resonanceBackgroundTerm" minOccurs="0"/>
                  <xs:element name="fastRegion" type="resonanceBackgroundTerm" minOccurs="0"/>
                </xs:sequence>
                <xs:sequence>
                  <xs:element name="unresolvedRegion" type="resonanceBackgroundTerm"/>
                  <xs:element name="fastRegion" type="resonanceBackgroundTerm" minOccurs="0"/>
                  <xs:element name="uncertainty" type="xData_uncertainty" minOccurs="0"/>
                </xs:sequence>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="uncertainty" type="xData_uncertainty" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="label" type="xs:string" use="required"/>
      </xs:complexType>

      <xs:complexType name="resonanceBackgroundTerm">
        <xs:choice>
          <xs:element name="XYs1d" type="xData_XYs1d_primary"/>
          <xs:element name="regions1d" type="xData_regions_1d_primary"/>
        </xs:choice>
      </xs:complexType>

  <xs:element name="doubleDifferentialCrossSection">
    <xs:complexType>
      <xs:choice>
        <xs:element name="CoulombPlusNuclearElastic" type="CoulombPlusNuclearElastic"/>
        <xs:element name="coherentPhotonScattering" type="coherentPhotonScattering"/>
        <xs:element name="incoherentPhotonScattering" type="incoherentPhotonScattering"/>
        <xs:element name="thermalNeutronScatteringLaw_coherentElastic" type="thermalNeutronScatteringLaw_coherentElastic"/>
        <xs:element name="thermalNeutronScatteringLaw_incoherentElastic" type="thermalNeutronScatteringLaw_incoherentElastic"/>
        <xs:element name="thermalNeutronScatteringLaw_incoherentInelastic" type="thermalNeutronScatteringLaw_incoherentInelastic"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>

    <xs:complexType name="CoulombPlusNuclearElastic">
      <xs:sequence>
        <xs:element name="RutherfordScattering">
          <xs:complexType>
            <xs:attribute name="domainMin" type="xs:string"/>
            <xs:attribute name="domainMax" type="xs:string"/>
            <xs:attribute name="domainUnit" type="xs:string"/>
          </xs:complexType>
        </xs:element>
        <xs:choice>
          <xs:element name="nuclearAmplitudeExpansion" type="nuclearAmplitudeExpansion"/>
          <xs:element name="nuclearPlusInterference" type="nuclearPlusInterference"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="label" type="xs:string" use="required"/>
      <xs:attribute name="pid" type="xs:string" use="required"/>
      <xs:attribute name="productFrame" type="frame" use="required"/>
      <xs:attribute name="identicalParticles" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="nuclearAmplitudeExpansion">
      <xs:sequence>
        <xs:element name="nuclearTerm" type="CoulombExpansionTerm"/>
        <xs:element name="realInterferenceTerm" type="CoulombExpansionTerm"/>
        <xs:element name="imaginaryInterferenceTerm" type="CoulombExpansionTerm"/>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="CoulombExpansionTerm">
      <xs:sequence>
        <xs:choice>
          <xs:element name="regions2d" type="xData_regions_2d_primary"/>
          <xs:element name="XYs2d" type="xData_XYs2d_primary"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="nuclearPlusInterference">
      <xs:sequence>
        <xs:element name="crossSection">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="XYs1d" type="xData_XYs1d_primary"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="distribution">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="XYs2d" type="xData_XYs2d_primary"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="muCutoff" type="xs:double" use="required"/>
    </xs:complexType>

    
    <!-- coherent/incoherent: doubleDifferentialCrossSections for photo-atomic data -->
    <xs:complexType name="coherentPhotonScattering">
      <xs:sequence>
        <!-- expansion has either one or three terms: scattering form factor, optionally real and imaginary anomalous factors -->
        <xs:element name="formFactor" type="coherentPhotonFormFactor"/>
        <xs:element name="realAnomalousFactor" type="coherentPhotonFormFactor" minOccurs="0"/>
        <xs:element name="imaginaryAnomalousFactor" type="coherentPhotonFormFactor" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="label" type="xs:string" use="required"/>
      <xs:attribute name="pid" type="xs:string" use="required"/>
      <xs:attribute name="productFrame" type="frame" use="required"/>
    </xs:complexType>

      <xs:complexType name="coherentPhotonFormFactor">
        <xs:sequence>
          <xs:choice>
            <xs:element name="XYs1d" type="xData_XYs1d_primary"/>
            <xs:element name="regions1d" type="xData_regions_1d_primary"/>
          </xs:choice>
        </xs:sequence>
      </xs:complexType>

    <xs:complexType name="incoherentPhotonScattering">
      <xs:sequence>
        <xs:element name="scatteringFactor" minOccurs="0">
          <xs:complexType>
            <xs:choice>
              <xs:element name="XYs1d" type="xData_XYs1d_primary"/>
              <xs:element name="regions1d" type="xData_regions_1d_primary"/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="label" type="xs:string" use="required"/>
      <xs:attribute name="pid" type="xs:string" use="required"/>
      <xs:attribute name="productFrame" type="frame" use="required"/>
    </xs:complexType>


    <!-- doubleDifferentialCrossSection forms for thermal neutron scattering law (TNSL) data -->
    <xs:complexType name="thermalNeutronScatteringLaw_coherentElastic">
      <xs:choice>
        <xs:element name="S_table">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="gridded2d" type="xData_gridded2d"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="BraggEdges">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BraggEdge" type="BraggEdge" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
      <xs:attribute name="label" type="xs:string" use="required"/>
      <xs:attribute name="pid" type="xs:string" use="required"/>
      <xs:attribute name="productFrame" type="frame" use="required"/>
    </xs:complexType>

        <xs:complexType name="XYs1d_wrapper">
          <xs:sequence>
            <xs:element name="XYs1d" type="xData_XYs1d_primary"/>
          </xs:sequence>
        </xs:complexType>

      <xs:complexType name="BraggEdge">
        <xs:sequence>
          <xs:element name="BraggEnergy" type="XYs1d_wrapper"/>
          <xs:element name="structureFactor" type="XYs1d_wrapper"/>
        </xs:sequence>
        <xs:attribute name="label" type="xs:string" use="required"/>
      </xs:complexType>

    <xs:complexType name="thermalNeutronScatteringLaw_incoherentElastic">
      <xs:sequence>
        <xs:element name="boundAtomCrossSection">
          <xs:complexType>
            <xs:attribute name="value" type="xs:double" use="required"/>
            <xs:attribute name="unit" type="xs:string" use="required"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="DebyeWallerIntegral" type="XYs1d_wrapper"/>
      </xs:sequence>
      <xs:attribute name="label" type="xs:string" use="required"/>
      <xs:attribute name="pid" type="xs:string" use="required"/>
      <xs:attribute name="productFrame" type="frame" use="required"/>
    </xs:complexType>

    <xs:complexType name="thermalNeutronScatteringLaw_incoherentInelastic">
      <xs:sequence>
        <!-- expansion has either one or three terms: scattering form factor, optionally real and imaginary anomalous factors -->
        <xs:element name="scatteringAtoms">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="scatteringAtom" type="scatteringAtom" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="label" type="xs:string" use="required"/>
      <xs:attribute name="pid" type="xs:string" use="required"/>
      <xs:attribute name="productFrame" type="frame" use="required"/>
      <xs:attribute name="calculatedAtThermal" type="xs:boolean"/>
      <xs:attribute name="incoherentApproximation" type="xs:boolean"/>
      <xs:attribute name="primaryScatterer" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="valueWithUnit">
      <xs:attribute name="value" type="xs:double" use="required"/>
      <xs:attribute name="unit" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="scatteringAtom">
      <xs:sequence>
        <xs:element name="mass" type="valueWithUnit"/>
        <xs:element name="e_critical" type="valueWithUnit" minOccurs="0"/>
        <xs:element name="e_max" type="valueWithUnit"/>
        <xs:element name="boundAtomCrossSection" type="valueWithUnit"/>
        <xs:element name="coherentAtomCrossSection" type="valueWithUnit" minOccurs="0"/>
        <xs:element name="distinctScatteringKernel" type="distinctScatteringKernel" minOccurs="0"/>
        <xs:element name="selfScatteringKernel" type="selfScatteringKernel"/>
        <xs:element name="T_effective" type="XYs1d_wrapper" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="pid" type="xs:string" use="required"/>
      <xs:attribute name="primaryScatterer" type="xs:boolean"/>
      <xs:attribute name="numberPerMolecule" type="xs:integer" use="required"/>
    </xs:complexType>

    <xs:complexType name="selfScatteringKernel">
      <xs:choice maxOccurs="unbounded">
        <xs:element name="gridded3d" type="xData_gridded3d"/>
        <xs:element name="GaussianApproximation">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="phononSpectrum" type="XYs1d_wrapper"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SCTApproximation">
          <xs:complexType/>
        </xs:element>
        <xs:element name="freeGasApproximation">
          <xs:complexType/>
        </xs:element>
      </xs:choice>
      <xs:attribute name="symmetric" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="distinctScatteringKernel">
      <xs:sequence>
        <xs:element name="gridded3d" type="xData_gridded3d"/>
      </xs:sequence>
    </xs:complexType>


  <!-- reaction Q-value -->
  <xs:complexType name="Q">
    <xs:choice maxOccurs="unbounded">
      <xs:element name="constant1d" type="xData_constant1d"/>
      <xs:element name="XYs1d" type="xData_XYs1d_primary"/>
    </xs:choice>
  </xs:complexType>

  <!-- fission fragments and delayed products -->
  <xs:element name="fissionFragmentData">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="delayedNeutrons" minOccurs="0">
          <xs:complexType>
            <xs:sequence maxOccurs="unbounded">
              <xs:element name="delayedNeutron" type="delayedNeutron"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="fissionEnergyReleases" minOccurs="0">
          <xs:complexType>
            <xs:sequence maxOccurs="unbounded">
              <xs:element name="fissionEnergyRelease" type="fissionEnergyRelease"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="productYields" minOccurs="0">
          <xs:complexType>
            <xs:sequence maxOccurs="unbounded">
              <xs:element name="productYield" type="productYield"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

    <xs:complexType name="delayedNeutron">
      <xs:sequence>
        <xs:element name="rate" type="PoPs_quantity"/>
        <xs:element ref="product"/>
      </xs:sequence>
      <xs:attribute name="label" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="fissionEnergyReleaseSubform">
      <xs:choice>
        <xs:element name="polynomial1d" type="xData_polynomial_1d_primary"/>
        <xs:element name="XYs1d" type="xData_XYs1d_primary"/>
      </xs:choice>
    </xs:complexType>

    <xs:complexType name="fissionEnergyRelease">
      <xs:sequence>
        <xs:element name="promptProductKE" type="fissionEnergyReleaseSubform"/>
        <xs:element name="promptNeutronKE" type="fissionEnergyReleaseSubform"/>
        <xs:element name="delayedNeutronKE" type="fissionEnergyReleaseSubform"/>
        <xs:element name="promptGammaEnergy" type="fissionEnergyReleaseSubform"/>
        <xs:element name="delayedGammaEnergy" type="fissionEnergyReleaseSubform"/>
        <xs:element name="delayedBetaEnergy" type="fissionEnergyReleaseSubform"/>
        <xs:element name="neutrinoEnergy" type="fissionEnergyReleaseSubform"/>
        <xs:element name="nonNeutrinoEnergy" type="fissionEnergyReleaseSubform"/>
        <xs:element name="totalEnergy" type="fissionEnergyReleaseSubform"/>
      </xs:sequence>
      <xs:attribute name="label" use="required"/>
    </xs:complexType>

    <xs:complexType name="productYield">
      <xs:sequence>
        <xs:element name="nuclides" type="fissionProductYieldsNuclidesList" minOccurs="0"/>
        <xs:element name="elapsedTimes">
          <xs:complexType>
            <xs:sequence maxOccurs="unbounded">
              <xs:element name="elapsedTime" type="fissionProductYieldElapsedTime"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="label" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="fissionProductYieldsNuclidesList">
      <xs:simpleContent>
        <xs:extension base="listOfNuclides">
          <xs:attribute name="href" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>

      <xs:simpleType name="listOfNuclides">
        <xs:list itemType="xs:string"/>
      </xs:simpleType>

    <xs:complexType name="fissionProductYieldElapsedTime">
      <xs:sequence>
        <xs:element name="time" type="PoPs_quantity"/>
        <xs:choice maxOccurs="1">
          <xs:element name="yields" type="fissionProductYields"/>
          <xs:element name="incidentEnergies">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="incidentEnergy" type="fissionProductYieldIncidentEnergy" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="label" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="fissionProductYields">
      <xs:sequence>
        <xs:element name="nuclides" type="fissionProductYieldsNuclidesList"/>
        <xs:element name="values" type="xData_values"/>
        <xs:element name="uncertainty" type="xData_uncertainty" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="fissionProductYieldIncidentEnergy">
      <xs:sequence>
        <xs:element name="energy" type="PoPs_quantity"/>
        <xs:element name="yields" type="fissionProductYields"/>
      </xs:sequence>
      <xs:attribute name="label" type="xs:string" use="required"/>
    </xs:complexType>


  <!-- products of a reaction are listed within 'outputChannel'. If a product decays, the
      resulting decay products are listed within another 'outputChannel' -->
    <xs:complexType name="outputChannel">
      <xs:sequence>
        <xs:element name="Q" type="Q"/>
        <xs:element name="products">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="product" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element ref="fissionFragmentData" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="genre" type="xs:NCName" use="required"/>
      <xs:attribute name="process" type="xs:string"/>
    </xs:complexType>

  <!-- fissionComponent output channels don't always have a list of products -->
    <xs:complexType name="fissionComponentOutputChannel">
      <xs:sequence>
        <xs:element name="Q" type="Q"/>
        <xs:element name="products" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="product" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="genre" type="xs:NCName" use="required"/>
    </xs:complexType>

    <xs:complexType name="outputChannel_optionalProducts">
      <xs:sequence>
        <xs:element name="Q" type="Q"/>
        <xs:element name="products" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="product" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="genre" type="xs:NCName" use="required"/>
      <xs:attribute name="process" type="xs:string"/>
    </xs:complexType>

  <!-- outputChannel contains a list of products: -->
  <xs:element name="product">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="documentation" type="documentation"/>
        <xs:element name="multiplicity" type="multiplicity"/>
        <xs:element name="distribution" type="distribution"/>
        <xs:element minOccurs="0" name="outputChannel" type="outputChannel"/>
        <xs:element minOccurs="0" name="averageProductEnergy" type="averageProductEnergy"/>
      </xs:sequence>
      <xs:attribute name="pid" type="xs:string" use="required"/>
      <xs:attribute name="label" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>

    <!-- each product has a multiplicity: -->

    <xs:complexType name="multiplicity">
      <xs:choice maxOccurs="unbounded">
        <xs:element name="constant1d" type="xData_constant1d"/>
        <xs:element name="XYs1d" type="xData_XYs1d_primary"/>
        <xs:element name="regions1d" type="xData_regions_1d_primary"/>
        <xs:element name="polynomial1d" type="xData_polynomial_1d_primary"/>
        <xs:element name="reference" type="xlink"/>
        <xs:element name="branching1d" type="branching1dMultiplicity"/>
        <xs:element name="unspecified" type="unspecifiedMultiplicity"/>
      </xs:choice>
    </xs:complexType>

      <xs:complexType name="branching1dMultiplicity">
        <xs:attribute name="label" type="xs:NCName" use="required"/>
      </xs:complexType>


      <xs:complexType name="unspecifiedMultiplicity">
        <xs:attribute name="label" use="required"/>
      </xs:complexType>

    <!-- products also have distribution data. Start by defining allowed frames -->
    <xs:simpleType name="frame">
      <xs:restriction base="xs:string">
        <xs:enumeration value="lab" />
        <xs:enumeration value="centerOfMass" />
      </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="distribution">
      <xs:choice maxOccurs="unbounded">
        <xs:element name="angularTwoBody" type="angularTwoBody"/>
        <xs:element name="uncorrelated" type="uncorrelated"/>
        <xs:element name="angularEnergy" type="angularEnergy"/>
        <xs:element name="energyAngular" type="energyAngular"/>
        <xs:element name="KalbachMann" type="KalbachMann"/>
        <xs:element name="reference" type="xlink"/>
        <xs:element name="branching3d" type="branching3d"/>
        <xs:element name="CoulombPlusNuclearElastic" type="xlink"/>
        <xs:element name="coherentPhotonScattering" type="xlink"/>
        <xs:element name="incoherentPhotonScattering" type="xlink"/>
        <xs:element name="thermalNeutronScatteringLaw" type="xlink"/>
        <xs:element name="unspecified" type="unspecified"/>
      </xs:choice>
    </xs:complexType>

    <!-- distribution components (angular, energy, etc) -->
    <xs:complexType name="angularTwoBody">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="XYs2d" type="xData_XYs2d_primary"/>
        <xs:element name="regions2d" type="xData_regions_2d_primary"/>
        <xs:element name="isotropic2d" type="isotropic2d"/>
        <xs:element name="recoil" type="xlink"/>
      </xs:choice>
      <xs:attribute name="label" type="xs:NCName" use="required"/>
      <xs:attribute name="productFrame" type="frame" use="required"/>
    </xs:complexType>

    <xs:complexType name="uncorrelated">
      <xs:sequence>
        <xs:element name="angular" type="angular_uncorrelated"/>
        <xs:element name="energy" type="energy_uncorrelated"/>
      </xs:sequence>
      <xs:attribute name="label" type="xs:NCName" use="required"/>
      <xs:attribute name="productFrame" type="frame" use="required"/>
    </xs:complexType>

    <xs:complexType name="angular_uncorrelated">
      <xs:choice>
        <xs:element name="XYs2d" type="xData_XYs2d_primary"/>
        <xs:element name="isotropic2d" type="isotropic2d"/>
        <xs:element name="forward" type="forward"/>
      </xs:choice>
    </xs:complexType>

    <xs:complexType name="energy_uncorrelated">
      <xs:choice>
        <xs:element name="XYs2d" type="xData_XYs2d_primary"/>
        <xs:element name="regions2d" type="xData_regions_2d_primary"/>
        <xs:element name="generalEvaporation" type="generalEvaporation"/>
        <xs:element name="discreteGamma" type="discreteGamma"/>
        <xs:element name="NBodyPhaseSpace" type="NBodyPhaseSpace"/>
        <xs:element name="primaryGamma" type="primaryGamma"/>
        <xs:element name="evaporation" type="evaporation"/>
        <xs:element name="weightedFunctionals" type="weightedFunctionals"/>
        <xs:element name="simpleMaxwellianFission" type="simpleMaxwellianFission"/>
        <xs:element name="Watt" type="Watt"/>
        <xs:element name="MadlandNix" type="MadlandNix"/>
      </xs:choice>
    </xs:complexType>

      <!-- uncorrelated angular distribution forms -->
      <xs:complexType name="isotropic2d"/>
      <xs:complexType name="forward"/>

      <!-- uncorrelated energy distribution forms -->

        <xs:complexType name="energyFunctionalData">
          <xs:sequence>
            <xs:element name="XYs1d" type="xData_XYs1d_primary"/>
          </xs:sequence>
        </xs:complexType>

        <xs:complexType name="evaporation">
          <xs:sequence>
            <xs:element name="U" type="PhysicalQuantity"/>
            <xs:element name="theta" type="energyFunctionalData"/>
          </xs:sequence>
        </xs:complexType>

        <xs:complexType name="MadlandNix">
          <xs:sequence>
            <xs:element name="EFL" type="PhysicalQuantity"/>
            <xs:element name="EFH" type="PhysicalQuantity"/>
            <xs:element name="T_M" type="energyFunctionalData"/>
          </xs:sequence>
        </xs:complexType>

        <xs:complexType name="Watt">
          <xs:sequence>
            <xs:element name="U" type="PhysicalQuantity"/>
            <xs:element name="a" type="energyFunctionalData"/>
            <xs:element name="b" type="energyFunctionalData"/>
          </xs:sequence>
        </xs:complexType>

        <xs:complexType name="generalEvaporation">
          <xs:sequence>
            <xs:element name="U" type="PhysicalQuantity"/>
            <xs:element name="theta" type="energyFunctionalData"/>
            <xs:element name="g" type="energyFunctionalData"/>
          </xs:sequence>
        </xs:complexType>

        <xs:complexType name="simpleMaxwellianFission">
          <xs:sequence>
            <xs:element name="U" type="PhysicalQuantity"/>
            <xs:element name="theta" type="energyFunctionalData"/>
          </xs:sequence>
        </xs:complexType>

        <!-- energy distribution may be expressed as weighted sum of two or more
             functional forms: -->
        <xs:complexType name="weightedFunctionals">
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="weighted">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="XYs1d" type="xData_XYs1d_primary"/>
                  <xs:choice>
                    <xs:element name="evaporation"/>
                  </xs:choice>
                </xs:sequence>
                <xs:attribute name="index" type="xs:integer"/> <!-- FIXME: use="required"/> -->
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>

        <xs:complexType name="NBodyPhaseSpace">
          <xs:sequence>
            <xs:element name="mass" type="PhysicalQuantity"/>
          </xs:sequence>
          <xs:attribute name="numberOfProducts" type="xs:integer" use="required"/>
        </xs:complexType>

        <xs:complexType name="discreteGamma">
          <xs:sequence>
            <xs:element name="axes" type="axes"/>
          </xs:sequence>
          <xs:attribute name="value" type="xs:double" use="required"/>
          <xs:attribute name="domainMin" type="xs:double" use="required"/>
          <xs:attribute name="domainMax" type="xs:double" use="required"/>
        </xs:complexType>

        <xs:complexType name="primaryGamma">
          <xs:sequence>
            <xs:element name="axes" type="axes"/>
          </xs:sequence>
          <xs:attribute name="value" type="xs:double" use="required"/>
          <xs:attribute name="domainMin" type="xs:double" use="required"/>
          <xs:attribute name="domainMax" type="xs:double" use="required"/>
        </xs:complexType>
        <!-- end of energy distribution forms -->

    <xs:complexType name="angularEnergy">
      <xs:sequence>
        <xs:element name="XYs3d" type="xData_XYs3d_primary"/>
      </xs:sequence>
      <xs:attribute name="label" type="xs:NCName" use="required"/>
      <xs:attribute name="productFrame" type="frame" use="required"/>
    </xs:complexType>

    <xs:complexType name="energyAngular">
      <xs:sequence>
        <xs:element name="XYs3d" type="xData_XYs3d_primary"/>
      </xs:sequence>
      <xs:attribute name="label" type="xs:NCName" use="required"/>
      <xs:attribute name="productFrame" type="frame" use="required"/>
    </xs:complexType>

    <xs:complexType name="KalbachMann">
      <xs:sequence>
        <xs:element name="f" type="KalbachMann_subform"/>
        <xs:element name="r" type="KalbachMann_subform"/>
        <xs:element name="a" type="KalbachMann_subform" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="label" type="xs:NCName" use="required"/>
      <xs:attribute name="productFrame" type="frame" use="required"/>
    </xs:complexType>

        <!-- f,r and a inside KalbachMann look the same -->
        <xs:complexType name="KalbachMann_subform">
          <xs:sequence>
            <xs:element name="XYs2d" type="xData_XYs2d_primary"/>
          </xs:sequence>
        </xs:complexType>

    <xs:complexType name="branching3d">
      <xs:attribute name="label" type="xs:NCName" use="required"/>
      <xs:attribute name="productFrame" type="frame" use="required"/>
    </xs:complexType>

    <xs:complexType name="unspecified">
      <xs:attribute name="label" type="xs:NCName" use="required"/>
      <xs:attribute name="productFrame" type="frame" use="required"/>
    </xs:complexType>
    <!-- end of distribution components. -->

    <!-- optional: product may have energy deposition -->
    <xs:complexType name="averageProductEnergy">
      <xs:choice minOccurs="0">
        <xs:element name="XYs1d" type="xData_XYs1d_primary"/>
        <xs:element name="regions1d" type="xData_regions_1d_primary"/>
      </xs:choice>
    </xs:complexType>





  <!-- Some basic data containers are used throughout GNDS files, and are defined here.
       They include 'axes' which contains information on units and interpolation,
       'PhysicalQuantity' containing a number with units, link (using xlink syntax),
       pointwise and piecewise versions of 1,2 and 3-dimensional data containers,
       and the 'table' element: -->

  <xs:simpleType name="textEncoding">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ascii"/>
      <xs:enumeration value="utf8"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="textMarkup">
    <xs:restriction base="xs:string">
      <xs:enumeration value="none"/>
      <xs:enumeration value="xml"/>
      <xs:enumeration value="xhtml"/>
      <xs:enumeration value="latex"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="keywordType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NSR"/>
      <xs:enumeration value="PACS"/>
      <xs:enumeration value="PhySH"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="xlink">
    <xs:attribute name="label" type="xs:NCName"/>
    <xs:attribute name="href" use="required"/>
  </xs:complexType>

  <!-- Physical quantities have both value and unit. For unitless values, use unit=""-->
  <xs:complexType name="PhysicalQuantity">
    <xs:attribute name="value" type="xs:double" use="required"/>
    <xs:attribute name="unit" type="xs:string" use="required"/> <!-- FIXME enumerate allowed units? -->
  </xs:complexType>

  <!-- different types of PQU used by PoPs... unify with previous if possible -->
  <xs:complexType name="PQU_double">
    <xs:sequence>
      <xs:element name="uncertainty" type="PQU_uncertainty" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="label" type="xs:string" use="required"/>
    <xs:attribute name="value" type="xs:double" use="required"/>
    <xs:attribute name="unit" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="PQU_integer">
    <xs:attribute name="label" type="xs:string" use="required"/>
    <xs:attribute name="value" type="xs:integer" use="required"/>
    <xs:attribute name="unit" type="xs:string"/>
  </xs:complexType>

  <!-- double and int are similar when they appear inside <uncertainty>, but don't require a label -->
  <xs:complexType name="PQU_uncertainty_double">
    <xs:sequence>
      <xs:element name="uncertainty" type="PQU_uncertainty" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="label" type="xs:string"/>
    <xs:attribute name="value" type="xs:double" use="required"/>
    <xs:attribute name="unit" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="PQU_uncertainty_integer">
    <xs:attribute name="label" type="xs:string"/>
    <xs:attribute name="value" type="xs:integer" use="required"/>
    <xs:attribute name="unit" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="PQU_uncertainty">
    <xs:choice>
      <xs:element name="standard">
        <xs:complexType>
          <xs:choice>
            <xs:element name="double" type="PQU_uncertainty_double"/>
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:complexType>

    <xs:simpleType name="parityAttribute">
      <xs:restriction base="xs:int">
        <xs:enumeration value="1"/>
        <xs:enumeration value="-1"/>
      </xs:restriction>
    </xs:simpleType>

  <xs:complexType name="PQU_fraction">
    <xs:attribute name="label" type="xs:string" use="required"/>
    <xs:attribute name="value" type="fractionAttribute" use="required"/>
    <xs:attribute name="unit" type="xs:string"/>
  </xs:complexType>

    <!-- date could match xs:date or xs:dateTime -->
    <xs:simpleType name="date">
      <xs:union>
        <xs:simpleType>
          <xs:restriction base="xs:date"/>
        </xs:simpleType>
        <xs:simpleType>
          <xs:restriction base="xs:dateTime"/>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>

    <xs:simpleType name="fractionAttribute">
      <xs:restriction base="xs:string">
        <xs:pattern value="(-?[0-9]+)(/)?([0-9]+)?"/>
      </xs:restriction>
    </xs:simpleType>

  <xs:complexType name="PQU_string">
    <xs:attribute name="label" type="xs:NMTOKEN" use="required"/>
    <xs:attribute name="value" type="xs:string" use="required"/>
    <xs:attribute name="unit" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="axes">
    <xs:sequence>
      <xs:element name="axis" maxOccurs="unbounded">
        <xs:complexType>
          <xs:attribute name="index" use="required" type="xs:integer"/>
          <xs:attribute name="label" use="required"/>
          <xs:attribute name="unit" use="required"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="grid_axes">
    <xs:sequence>
      <xs:element name="grid" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="values" type="xData_values"/>
          </xs:sequence>
          <xs:attribute name="index" use="required" type="xs:integer"/>
          <xs:attribute name="label" use="required"/>
          <xs:attribute name="unit" use="required"/>
          <xs:attribute name="style" use="required"/> <!-- FIXME enumerate options? -->
          <xs:attribute name="interpolation" type="interpolation"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="axis" maxOccurs="unbounded">
        <xs:complexType>
          <xs:attribute name="index" use="required" type="xs:integer"/>
          <xs:attribute name="label" use="required"/>
          <xs:attribute name="unit" use="required"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- plain text data (except for documentation) may only contain a list of doubles: -->
  <xs:simpleType name="datalist">
    <xs:list itemType="xs:double"/>
  </xs:simpleType>

  <!-- allowed interpolation types -->
  <xs:simpleType name="interpolation">
    <xs:restriction base="xs:string">
      <xs:enumeration value="flat"/>
      <xs:enumeration value="charged-particle"/>  <!-- FIXME... should this be here? -->
      <xs:enumeration value="lin-lin"/>
      <xs:enumeration value="lin-log"/>
      <xs:enumeration value="log-lin"/>
      <xs:enumeration value="log-log"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- 'values' element contains a list of floating-point numbers plus optional attributes -->
  <xs:complexType name="xData_values">
    <xs:simpleContent>
      <xs:extension base="datalist">
        <xs:attribute name="label" type="xs:string"/>
        <xs:attribute name="valueType" type="xs:string"/> <!-- FIXME enumerate options? -->
        <xs:attribute name="start" type="xs:integer"/>
        <xs:attribute name="length" type="xs:integer"/>
        <!-- additional attributes for pointing to binary data store: -->
        <xs:attribute name="href" type="xs:string"/>
        <xs:attribute name="startIndex" type="xs:integer"/>
        <xs:attribute name="count" type="xs:integer"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- 1d data (for cross section, multiplicity, series, distribution at one incident energy, etc.) -->
  <xs:complexType name="xData_constant1d">
    <xs:sequence>
      <xs:element name="axes" type="axes"/>
    </xs:sequence>
    <xs:attribute name="label" type="xs:NCName"/>
    <xs:attribute name="value" type="xs:double" use="required"/>
    <xs:attribute name="domainMin" type="xs:double" use="required"/>
    <xs:attribute name="domainMax" type="xs:double" use="required"/>
  </xs:complexType>

  <xs:complexType name="xData_XYs1d_primary">
    <xs:sequence>
      <xs:element name="axes" type="axes"/>
      <xs:element name="values" type="xData_values"/>
      <xs:element name="uncertainty" type="xData_uncertainty" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="label" type="xs:NCName"/>
    <xs:attribute name="interpolation" type="interpolation"/>
  </xs:complexType>

  <xs:complexType name="xData_XYs1d_inRegions">
    <xs:sequence>
      <xs:element name="values" type="xData_values"/>
    </xs:sequence>
    <xs:attribute name="index" type="xs:integer" use="required"/>
    <xs:attribute name="interpolation" type="interpolation"/>
  </xs:complexType>

  <xs:complexType name="xData_XYs1d">
    <xs:sequence>
      <xs:element name="values" type="xData_values"/>
    </xs:sequence>
    <xs:attribute name="outerDomainValue" type="xs:double" use="required"/>
    <xs:attribute name="interpolation" type="interpolation"/>
  </xs:complexType>

  <!-- piecewise 1d data -->
  <xs:complexType name="function1ds_inRegions">
    <xs:sequence>
      <xs:element name="XYs1d" type="xData_XYs1d_inRegions" minOccurs="2" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="xData_regions_1d_primary">
    <xs:sequence>
      <xs:element name="axes" type="axes"/>
      <xs:element name="function1ds" type="function1ds_inRegions"/>
      <xs:element name="uncertainty" type="xData_uncertainty" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="label" type="xs:NCName"/>
  </xs:complexType>

  <xs:complexType name="xData_regions_1d">
    <xs:sequence>
      <xs:element name="function1ds" type="function1ds_inRegions"/>
    </xs:sequence>
    <xs:attribute name="outerDomainValue" type="xs:double" use="required"/>
  </xs:complexType>

  <!-- series data: Legendre expansions, polynomials -->
  <xs:complexType name="xData_Legendre_1d">
    <xs:sequence>
      <xs:element name="values" type="xData_values"/>
    </xs:sequence>
    <xs:attribute name="outerDomainValue" type="xs:double" use="required"/>
  </xs:complexType>

  <xs:complexType name="xData_polynomial_1d_primary">
    <xs:sequence>
      <xs:element name="axes"/>
      <xs:element name="values" type="xData_values"/>
      <xs:element name="uncertainty" type="xData_uncertainty" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="label" type="xs:NCName"/>
    <xs:attribute name="domainMin" type="xs:double" use="required"/>
    <xs:attribute name="domainMax" type="xs:double" use="required"/>
  </xs:complexType>

  <!-- 2d data: energy or angular distribution -->
  <xs:complexType name="function1ds">
    <xs:choice maxOccurs="unbounded">
      <xs:element name="Legendre" type="xData_Legendre_1d"/>
      <xs:element name="XYs1d" type="xData_XYs1d"/>
      <xs:element name="regions1d" type="xData_regions_1d"/>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="xData_XYs2d_primary">
    <xs:sequence>
      <xs:element name="axes" type="axes"/>
      <xs:element name="function1ds" type="function1ds"/>
      <xs:element name="uncertainty" type="xData_uncertainty" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="label" type="xs:string"/>
    <xs:attribute name="interpolation" type="interpolation"/>
    <xs:attribute name="interpolationQualifier" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="xData_XYs2d_inRegions">
    <xs:sequence>
      <xs:element name="function1ds" type="function1ds"/>
    </xs:sequence>
    <xs:attribute name="index" type="xs:integer" use="required"/>
    <xs:attribute name="interpolation" type="interpolation"/>
    <xs:attribute name="interpolationQualifier" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="xData_XYs2d">
    <xs:sequence>
      <xs:element name="function1ds" type="function1ds"/>
    </xs:sequence>
    <xs:attribute name="outerDomainValue" type="xs:double" use="required"/>
    <xs:attribute name="interpolation" type="interpolation"/>
    <xs:attribute name="interpolationQualifier" type="xs:string"/>
  </xs:complexType>

  <!-- 2d regions -->
  <xs:complexType name="function2ds_inRegions">
    <xs:sequence>
      <xs:element name="XYs2d" type="xData_XYs2d_inRegions" minOccurs="2" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="xData_regions_2d_primary">
    <xs:sequence>
      <xs:element name="axes" type="axes"/>
      <xs:element name="function2ds" type="function2ds_inRegions"/>
      <xs:element name="uncertainty" type="xData_uncertainty" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="label" type="xs:NCName"/>
    <xs:attribute name="interpolationQualifier" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="xData_regions_2d">
    <xs:sequence>
      <xs:element name="function2ds" type="function2ds_inRegions" minOccurs="2" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="outerDomainValue" type="xs:double" use="required"/>
  </xs:complexType>

  <!-- 3d data: double-differential distribution -->
  <xs:complexType name="function2ds">
    <xs:choice maxOccurs="unbounded">
      <xs:element name="XYs2d" type="xData_XYs2d"/>
      <xs:element name="regions2d" type="xData_regions_2d"/>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="xData_XYs3d_primary">
    <xs:sequence>
      <xs:element name="axes" type="axes"/>
      <xs:element name="function2ds" type="function2ds"/>
      <xs:element name="uncertainty" type="xData_uncertainty" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="label" type="xs:string"/>
    <xs:attribute name="interpolationQualifier" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="xData_XYs3d_inRegions">
    <xs:sequence>
      <xs:element name="axes" type="axes"/>
      <xs:element name="function2ds" type="function2ds"/>
      <xs:element name="uncertainty" type="xData_uncertainty" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="index" type="xs:integer"/> <!-- use="required"/> -->
  </xs:complexType>

  <!-- 3d regions -->
  <xs:complexType name="function3ds_inRegions">
    <xs:sequence>
      <xs:element name="XYs3d" type="xData_XYs3d_inRegions" minOccurs="2" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="xData_regions_3d_primary">
    <xs:sequence>
      <xs:element name="axes" type="axes"/>
      <xs:element name="function3ds" type="function3ds_inRegions"/>
    </xs:sequence>
    <xs:attribute name="outerDomainValue" type="xs:double" use="required"/>
  </xs:complexType>

  <!-- uncertainty can appear inside many xData containers -->
  <xs:complexType name="xData_uncertainty">
    <xs:choice>
      <xs:element name="XYs1d" type="xData_XYs1d_primary"/>
      <xs:element name="polynomial1d" type="xData_polynomial_1d_primary"/>
      <xs:element name="covariance" type="covariance"/>
      <xs:element name="listOfCovariances">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="covariance" type="covariance" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="index" type="xs:integer"/>
    <xs:attribute name="label" type="xs:string"/>
    <xs:attribute name="type" type="xs:string"/>
    <xs:attribute name="pdf" type="xs:string"/>
    <xs:attribute name="relation" type="xs:string"/>
  </xs:complexType>

  <!-- 'table' has a list of columns + a rectangular array of data -->
  <xs:complexType name="table">
    <xs:sequence>
      <xs:element name="columnHeaders">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="column" type="column" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="data" type="datalist"/>
    </xs:sequence>
    <xs:attribute name="rows" type="xs:integer" use="required"/>
    <xs:attribute name="columns" type="xs:integer" use="required"/>
  </xs:complexType>

  <xs:complexType name="column">
    <xs:attribute name="index" type="xs:integer" use="required"/>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="unit" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="xData_array">
    <xs:sequence>
      <xs:element name="values" type="xData_values" maxOccurs="3"/>
    </xs:sequence>
    <xs:attribute name="shape" type="xs:string" use="required"/>
    <xs:attribute name="compression" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="xData_gridded2d">
    <xs:sequence>
      <xs:element name="axes" type="grid_axes"/>
      <xs:element name="array" type="xData_array"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="xData_gridded3d">
    <xs:sequence>
      <xs:element name="axes" type="grid_axes"/>
      <xs:element name="array" type="xData_array"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="covariance">
    <!-- FIXME: should be stricter here, must either contain array or href -->
    <xs:sequence>
      <xs:element name="array" type="xData_array" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="label" type="xs:NCName"/>
    <xs:attribute name="href"/>
  </xs:complexType>

</xs:schema>
