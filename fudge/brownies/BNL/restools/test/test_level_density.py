import unittest

from xData import enums as xDataEnumsModule
from brownies.BNL.restools.level_density import *


# ---------------------------------------------------------------------------------
#
#   Unit tests
#
# ---------------------------------------------------------------------------------

class TestNuclearLevelDensity(unittest.TestCase):

    def setUp(self):
        self.a = NuclearLevelDensity()

    def test__init__(self): pass

    def test__two_J(self):
        self.assertEqual(self.a.two_J(1.5), 3)
        self.assertEqual(self.a.two_J(3), 6)
        self.assertRaises(ValueError, self.a.two_J, 3.3)


class TestXYs(unittest.TestCase):

    def setUp(self):
        self.vl1 = axes.axes(2)
        self.vl1[1] = axes.axis('energy_in', 1, 'eV')
        self.vl1[0] = axes.axis('crossSection', 0, 'b')
        self.pXY1 = XYs.XYs1d(axes=self.vl1, data=[[1, 0], [3, 2], [4, 1]], interpolation=xDataEnumsModule.Interpolation.linlin)
        self.pXY2 = XYs.XYs1d(axes=self.vl1, data=[[1, 0], [4, 2]], interpolation=xDataEnumsModule.Interpolation.linlin)
        self.pXY3 = XYs.XYs1d(axes=self.vl1, data=[[1, 1], [2, 2], [4, 3], [7, 1]], interpolation=xDataEnumsModule.Interpolation.linlin)
        self.pXY4 = XYs.XYs1d(axes=self.vl1, data=[[1, 0], [2.5, 2], [3, 3], [7, 0]], interpolation=xDataEnumsModule.Interpolation.linlin, safeDivide=True)

    def test_toString(self):
        self.assertEqual(str(self.pXY1.axes),
                         'label="crossSection", index="0", unit="b"\nlabel="energy_in", index="1", unit="eV"')
        self.assertEqual(self.pXY1.toString(),
                         '   1.00000000e+00   0.00000000e+00\n   3.00000000e+00   2.00000000e+00\n'
                         '   4.00000000e+00   1.00000000e+00\n')
        self.assertEqual(self.pXY2.toString(),
                         '   1.00000000e+00   0.00000000e+00\n   4.00000000e+00   2.00000000e+00\n')
        self.assertEqual(self.pXY3.toString(),
                         '   1.00000000e+00   1.00000000e+00\n   2.00000000e+00   2.00000000e+00\n'
                         '   4.00000000e+00   3.00000000e+00\n   7.00000000e+00   1.00000000e+00\n')
        self.assertEqual(self.pXY4.toString(),
                         '   1.00000000e+00   0.00000000e+00\n   2.50000000e+00   2.00000000e+00\n'
                         '   3.00000000e+00   3.00000000e+00\n   7.00000000e+00   0.00000000e+00\n')

    def test_addition(self):
        self.assertEqual((self.pXY1 + '320 b').toString(),
                         '   1.00000000e+00   3.20000000e+02\n   3.00000000e+00   3.22000000e+02\n'
                         '   4.00000000e+00   3.21000000e+02\n')

    def test_division(self):
        self.assertEqual((self.pXY2 / self.pXY1).toString(),
                         '   1.00000000e+00   6.66666667e-01\n   3.00000000e+00   6.66666667e-01\n'
                         '   3.05133079e+00   7.01788614e-01\n   3.10397901e+00   7.39787525e-01\n'
                         '   3.15797847e+00   7.81018183e-01\n   3.21336384e+00   8.25896131e-01\n'
                         '   3.27017070e+00   8.74911260e-01\n   3.32843553e+00   9.28645220e-01\n'
                         '   3.38819575e+00   9.87793960e-01\n   3.44948974e+00   1.05319726e+00\n'
                         '   3.51235687e+00   1.12587794e+00\n   3.57683750e+00   1.20709453e+00\n'
                         '   3.64297306e+00   1.29841346e+00\n   3.71080601e+00   1.40180921e+00\n'
                         '   3.74537258e+00   1.45879833e+00\n   3.78037992e+00   1.51980658e+00\n'
                         '   3.81583366e+00   1.58526920e+00\n   3.85173947e+00   1.65568667e+00\n'
                         '   3.88810314e+00   1.73163732e+00\n   3.92493050e+00   1.81379312e+00\n'
                         '   3.96222746e+00   1.90293944e+00\n   4.00000000e+00   2.00000000e+00\n')
        self.assertEqual((5. / self.pXY3).toString(),
                         '   1.00000000e+00   5.00000000e+00\n   2.00000000e+00   2.50000000e+00\n'
                         '   4.00000000e+00   1.66666667e+00\n   7.00000000e+00   5.00000000e+00\n')
        self.assertEqual((3. / self.pXY4).toString(),
                         '   1.00000000e+00   3.14572800e+06\n   1.00000143e+00   1.57286400e+06\n'
                         '   1.00000286e+00   7.86432000e+05\n   1.00000572e+00   3.93216000e+05\n'
                         '   1.00001144e+00   1.96608000e+05\n   1.00002289e+00   9.83040000e+04\n'
                         '   1.00004578e+00   4.91520000e+04\n   1.00009155e+00   2.45760000e+04\n'
                         '   1.00018311e+00   1.22880000e+04\n   1.00036621e+00   6.14400000e+03\n'
                         '   1.00073242e+00   3.07200000e+03\n   1.00146484e+00   1.53600000e+03\n'
                         '   1.00292969e+00   7.68000000e+02\n   1.00585938e+00   3.84000000e+02\n'
                         '   1.01171875e+00   1.92000000e+02\n   1.02343750e+00   9.60000000e+01\n'
                         '   1.04687500e+00   4.80000000e+01\n   1.09375000e+00   2.40000000e+01\n'
                         '   1.18750000e+00   1.20000000e+01\n   1.37500000e+00   6.00000000e+00\n'
                         '   1.75000000e+00   3.00000000e+00\n   2.50000000e+00   1.50000000e+00\n'
                         '   3.00000000e+00   1.00000000e+00\n   5.00000000e+00   2.00000000e+00\n'
                         '   6.00000000e+00   4.00000000e+00\n   6.50000000e+00   8.00000000e+00\n'
                         '   6.75000000e+00   1.60000000e+01\n   6.87500000e+00   3.20000000e+01\n'
                         '   6.93750000e+00   6.40000000e+01\n   6.96875000e+00   1.28000000e+02\n'
                         '   6.98437500e+00   2.56000000e+02\n   6.99218750e+00   5.12000000e+02\n'
                         '   6.99609375e+00   1.02400000e+03\n   6.99804688e+00   2.04800000e+03\n'
                         '   6.99902344e+00   4.09600000e+03\n   6.99951172e+00   8.19200000e+03\n'
                         '   6.99975586e+00   1.63840000e+04\n   6.99987793e+00   3.27680000e+04\n'
                         '   6.99993896e+00   6.55360000e+04\n   6.99996948e+00   1.31072000e+05\n'
                         '   6.99998474e+00   2.62144000e+05\n   6.99999237e+00   5.24288000e+05\n'
                         '   6.99999619e+00   1.04857600e+06\n   7.00000000e+00   2.09715200e+06\n')

    @unittest.skip("Not the best way to do a real comparison!")
    def test_multiplication(self):
        self.assertEqual((self.pXY3 * self.pXY4).toString(),
                         '   1.00000000e+00   0.00000000e+00\n   1.00781250e+00   1.04980469e-02\n'
                         '   1.01562500e+00   2.11588542e-02\n   1.02206816e+00   3.00735579e-02\n'
                         '   1.03125000e+00   4.29687500e-02\n   1.03709549e+00   5.12954139e-02\n'
                         '   1.04408114e+00   6.13657163e-02\n   1.05244883e+00   7.35996147e-02\n'
                         '   1.06250000e+00   8.85416667e-02\n   1.07406870e+00   1.06073169e-01\n'
                         '   1.08795603e+00   1.27589728e-01\n   1.10470095e+00   1.54217649e-01\n'
                         '   1.12500000e+00   1.87500000e-01\n   1.14770917e+00   2.26036232e-01\n'
                         '   1.16078111e+00   2.48842226e-01\n   1.17518645e+00   2.74502328e-01\n'
                         '   1.19109494e+00   3.03482953e-01\n   1.20870461e+00   3.36349639e-01\n'
                         '   1.22824801e+00   3.73793554e-01\n   1.25000000e+00   4.16666667e-01\n'
                         '   1.27095032e+00   4.59152521e-01\n   1.29406933e+00   5.07394793e-01\n'
                         '   1.31965712e+00   5.62450392e-01\n   1.34807024e+00   6.25630840e-01\n'
                         '   1.37973562e+00   6.98579692e-01\n   1.41516893e+00   7.83378888e-01\n'
                         '   1.45499885e+00   8.82697082e-01\n   1.50000000e+00   1.00000000e+00\n'
                         '   1.54003277e+00   1.10889089e+00\n   1.58451981e+00   1.23491095e+00\n'
                         '   1.63418076e+00   1.38182132e+00\n   1.68989795e+00   1.55447617e+00\n'
                         '   1.75276517e+00   1.75922743e+00\n   1.82415510e+00   2.00451565e+00\n'
                         '   1.86357392e+00   2.14577844e+00\n   1.90581432e+00   2.30175188e+00\n'
                         '   1.95117541e+00   2.47454677e+00\n   2.00000000e+00   2.66666667e+00\n'
                         '   2.10196098e+00   3.01346731e+00\n   2.21748226e+00   3.42313988e+00\n'
                         '   2.34909690e+00   3.91156878e+00\n   2.50000000e+00   4.50000000e+00\n'
                         '   2.60245369e+00   5.07399206e+00\n   2.71824584e+00   5.74798335e+00\n'
                         '   2.84976649e+00   6.54605227e+00\n   3.00000000e+00   7.50000000e+00\n'
                         '   3.25912355e+00   7.37764929e+00\n   3.51316702e+00   7.20880972e+00\n'
                         '   3.76058500e+00   6.99784705e+00\n   4.00000000e+00   6.75000000e+00\n'
                         '   4.15485616e+00   6.18127962e+00\n   4.29691728e+00   5.68064014e+00\n'
                         '   4.42768594e+00   5.23763536e+00\n   4.54843835e+00   4.84374849e+00\n'
                         '   4.66026546e+00   4.49197976e+00\n   4.76410537e+00   4.17653339e+00\n'
                         '   4.86076920e+00   3.89257732e+00\n   4.95096189e+00   3.63605716e+00\n'
                         '   5.11432055e+00   3.19215308e+00\n   5.25826396e+00   2.82312423e+00\n'
                         '   5.38598130e+00   2.51304222e+00\n   5.50000000e+00   2.25000000e+00\n'
                         '   5.57323688e+00   2.08789884e+00\n   5.64127852e+00   1.94210315e+00\n'
                         '   5.70463912e+00   1.81050056e+00\n   5.76376735e+00   1.69131008e+00\n'
                         '   5.87085224e+00   1.48434815e+00\n   5.96515308e+00   1.31158927e+00\n'
                         '   6.04872887e+00   1.16591174e+00\n   6.12322029e+00   1.04195611e+00\n'
                         '   6.18995084e+00   9.35626686e-01\n   6.25000000e+00   8.43750000e-01\n'
                         '   6.31750172e+00   7.44775663e-01\n   6.37724661e+00   6.60975937e-01\n'
                         '   6.43039656e+00   5.89426615e-01\n   6.47789464e+00   5.27876022e-01\n'
                         '   6.52051432e+00   4.74567518e-01\n   6.55889601e+00   4.28114356e-01\n'
                         '   6.59357452e+00   3.87409940e-01\n   6.62500000e+00   3.51562500e-01\n'
                         '   6.65762798e+00   3.15388312e-01\n   6.68694308e+00   2.83795008e-01\n'
                         '   6.71335759e+00   2.56063742e-01\n   6.73722032e+00   2.31611340e-01\n'
                         '   6.75882834e+00   2.09960628e-01\n   6.77843624e+00   1.90718071e-01\n'
                         '   6.81250000e+00   1.58203125e-01\n   6.84294858e+00   1.30121141e-01\n'
                         '   6.86806595e+00   1.07653833e-01\n   6.88889694e+00   8.94992361e-02\n'
                         '   6.90625000e+00   7.47070312e-02\n   6.93387829e+00   5.17773231e-02\n'
                         '   6.95312500e+00   3.62548828e-02\n   6.97656250e+00   1.78527832e-02\n'
                         '   7.00000000e+00   0.00000000e+00\n')
        mul = self.pXY3 * self.pXY4
        mul = XYs.XYs1d(self.vl1, mul, 1e-3, safeDivide=True)
        self.assertEqual(mul.toXML(indent='    ', pairsPerLine=5),
                         '    <xData length="95" accuracy="0.001">\n'
                         '      <axes>\n'
                         '        <axis index="0" label="energy_in" unit="eV" interpolation="lin,lin"/>\n'
                         '        <axis index="1" label="crossSection" unit="b"/></axes>\n'
                         '      <data> 1 0 1.0078125 0.010498046875 1.015625 0.0211588541666667 '
                         '1.02206816450916 0.0300735578586169 1.03125 0.04296875\n'
                         '             1.03709548541904 0.0512954139433551 1.04408114029402 '
                         '0.0613657162981952 1.05244883114563 0.0735996147122231 1.0625 '
                         '0.0885416666666667 1.07406870367714 0.106073168722065\n'
                         '             1.08795603208456 0.127589727552826 1.10470094808518 0.154217648820148'
                         ' 1.125 0.1875 1.14770917415658 0.226036232382132 1.16078110542007 0.248842225706899\n'
                         '             1.17518645301135 0.274502328440062 1.19109493916226 0.303482953247579 '
                         '1.20870461334278 0.336349638631127 1.22824801122864 0.373793554477952 1.25'
                         ' 0.416666666666667\n'
                         '             1.27095031675892 0.459152521214241 1.29406932593601 0.507394792523285'
                         ' 1.31965711975226 0.562450391947428 1.34807023901482 0.625630840403528 1.37973562459275'
                         ' 0.698579692236791\n             1.41516892756513 0.783378887974281 1.45499885404707'
                         ' 0.882697081641619 1.5 1 1.54003277111879 1.10889088666803 1.5845198074299 1.23491095027706\n'
                         '             1.63418075605966 1.38182131655475 1.68989794855664 1.55447617063905 '
                         '1.7527651713035 1.75922743257478 1.82415510296892 2.00451564895817 1.8635739169048 '
                         '2.14577843581748\n             '
                         '1.90581432257351 2.30175187940376 1.95117541188947 2.47454676809676 2 2.66666666666667 '
                         '2.10196098363072 3.01346730689104 2.21748225867393 3.42313988413839\n'
                         '             2.34909690379139 3.91156877812911 2.5 4.5 2.60245369082114 '
                         '5.07399205827914 2.71824583655185 5.74798334620742 2.84976648596235 6.54605226749537\n'
                         '             3 7.5 3.25912355027679 7.37764928828068 3.51316701949486 7.20880972147796 '
                         '3.76058499822597 6.99784704834286 4 6.75\n'
                         '             4.1548561593768 6.18127961738546 4.29691728011311 5.68064013519072 '
                         '4.42768593951169 5.23763535825917 4.54843835433528 4.84374848549568 '
                         '4.66026546142249 4.49197975943939\n'
                         '             4.76410536511896 4.17653338530568 4.86076919655937 3.8925773177751 '
                         '4.95096189432334 3.63605715851499 5.11432055114385 3.19215307856132 5.25826396487047 '
                         '2.82312423438151\n'
                         '             5.38598129622604 2.51304221589657 5.5 2.25 5.5732368821658 2.08789883558164 '
                         '5.64127851613973 1.94210314824692 5.70463912464279 1.810500555221\n'
                         '             5.76376734554662 1.69131007880846 5.87085224304475 1.48434814623497 '
                         '5.96515307716505 1.3115892689767 6.04872886591051 1.16591173584307 6.12322028885515'
                         ' 1.04195611429627\n'
                         '             6.18995084332182 0.935626685626149 6.25 0.84375 6.3175017189294 '
                         '0.744775662635115 6.3772466086523 0.6609759367283 6.43039656311088 0.589426615324793\n'
                         '             6.47789464147778 0.527876021590477 6.52051432037161 0.474567518205643 '
                         '6.55889601109599 0.428114356191523 6.59357452486162 0.387409939774517 6.625 0.3515625\n'
                         '             6.65762798315705 0.315388311590772 6.68694307998582 0.283795007595014 '
                         '6.71335759125661 0.256063741802644 6.73722032048298 0.231611339621303 6.75882834186989'
                         ' 0.209960627940196\n'
                         '             6.77843623876513 0.190718071072424 6.8125 0.158203125 6.84294857787223 '
                         '0.130121141192002 6.86806595187316 0.107653832622697 6.88889694448429 0.0894992361092431\n'
                         '             6.90625 0.07470703125 6.93387828955896 0.0517773231266023 6.953125 '
                         '0.0362548828125 6.9765625 0.017852783203125 7 0</data></xData>')

    @unittest.skip("Not the best way to do a real comparison!")
    def test_thickening(self):
        tXY3 = self.pXY3.thicken(10, 0, 1)
        tXY4 = self.pXY4.thicken(10, 0, 1)
        self.assertEqual((tXY3 * tXY4).toString(),
                         '   1.00000000e+00   0.00000000e+00\n   1.00112146e+00   1.49695737e-03\n'
                         '   1.00224292e+00   2.99726853e-03\n   1.00448584e+00   6.00795224e-03\n'
                         '   1.00897168e+00   1.20695652e-02\n   1.01267824e+00   1.71186419e-02\n'
                         '   1.01794337e+00   2.43537733e-02\n   1.02533774e+00   3.46396572e-02\n'
                         '   1.03588673e+00   4.95661183e-02\n   1.04258871e+00   5.92033415e-02\n'
                         '   1.05060345e+00   7.08855386e-02\n   1.06021358e+00   8.51190060e-02\n'
                         '   1.07177346e+00   1.02566523e-01\n   1.08292241e+00   1.19731375e-01\n'
                         '   1.09595823e+00   1.40221610e-01\n   1.10686510e+00   1.57713665e-01\n'
                         '   1.11914645e+00   1.77789770e-01\n   1.13300883e+00   2.00933571e-01\n'
                         '   1.14869835e+00   2.27746074e-01\n   1.17264549e+00   2.69935939e-01\n'
                         '   1.20112443e+00   3.22100629e-01\n   1.23114441e+00   3.79429538e-01\n'
                         '   1.24953878e+00   4.15744517e-01\n   1.26971766e+00   4.56620369e-01\n'
                         '   1.29190950e+00   5.02827536e-01\n   1.31638220e+00   5.55306538e-01\n'
                         '   1.31950791e+00   5.62124288e-01\n   1.34037312e+00   6.08302632e-01\n'
                         '   1.36297573e+00   6.59636153e-01\n   1.38751322e+00   7.16906283e-01\n'
                         '   1.41421356e+00   7.81048584e-01\n   1.44269991e+00   8.51577483e-01\n'
                         '   1.47736579e+00   9.40325190e-01\n   1.51571657e+00   1.04224019e+00\n'
                         '   1.54710616e+00   1.12857507e+00\n   1.58113883e+00   1.22514823e+00\n'
                         '   1.62450479e+00   1.35268137e+00\n   1.67564492e+00   1.50952130e+00\n'
                         '   1.73286211e+00   1.69326530e+00\n   1.74110113e+00   1.72044268e+00\n'
                         '   1.80007046e+00   1.92024427e+00\n   1.86606598e+00   2.15484836e+00\n'
                         '   1.89914448e+00   2.27680704e+00\n   1.94758069e+00   2.46065312e+00\n'
                         '   2.00000000e+00   2.66666667e+00\n   2.08138302e+00   2.94235886e+00\n'
                         '   2.14354693e+00   3.15889356e+00\n   2.28110884e+00   3.65637759e+00\n'
                         '   2.29739671e+00   3.71695224e+00\n   2.37660234e+00   4.01656068e+00\n'
                         '   2.46228883e+00   4.35010340e+00\n   2.50000000e+00   4.50000000e+00\n'
                         '   2.54599844e+00   4.75510728e+00\n   2.59284322e+00   5.01925759e+00\n'
                         '   2.63901582e+00   5.28391242e+00\n   2.64054992e+00   5.29277885e+00\n'
                         '   2.68913439e+00   5.57601098e+00\n   2.73861279e+00   5.86930639e+00\n'
                         '   2.78900155e+00   6.17303045e+00\n   2.82842712e+00   6.41421356e+00\n'
                         '   2.84031744e+00   6.48756190e+00\n   2.89257751e+00   6.81329342e+00\n'
                         '   2.94579913e+00   7.15063210e+00\n   3.00000000e+00   7.50000000e+00\n'
                         '   3.03143313e+00   7.48784206e+00\n   3.24900959e+00   7.38336924e+00\n'
                         '   3.26526876e+00   7.37413640e+00\n   3.48220225e+00   7.23197953e+00\n'
                         '   3.55399336e+00   7.17716175e+00\n   3.73213197e+00   7.02444406e+00\n'
                         '   3.86824783e+00   6.89171171e+00\n   4.00000000e+00   6.75000000e+00\n'
                         '   4.21028960e+00   5.98352487e+00\n   4.23022820e+00   5.91314676e+00\n'
                         '   4.35655311e+00   5.47649088e+00\n   4.47370766e+00   5.08579575e+00\n'
                         '   4.58257569e+00   4.73503836e+00\n   4.73120108e+00   4.27532347e+00\n'
                         '   4.86559658e+00   3.87864155e+00\n   4.98778042e+00   3.53367851e+00\n'
                         '   5.00351505e+00   3.49033978e+00\n   5.15620014e+00   3.08264886e+00\n'
                         '   5.29150262e+00   2.74085468e+00\n   5.42881453e+00   2.41270100e+00\n'
                         '   5.51596189e+00   2.21421313e+00\n   5.59606590e+00   2.03846604e+00\n'
                         '   5.68544983e+00   1.84993370e+00\n   5.76672615e+00   1.68543758e+00\n'
                         '   5.84090783e+00   1.54106647e+00\n   5.90884616e+00   1.41367373e+00\n'
                         '   5.91815895e+00   1.39657081e+00\n   5.97131764e+00   1.30060548e+00\n'
                         '   6.02087366e+00   1.21368895e+00\n   6.11047626e+00   1.06276905e+00\n'
                         '   6.18919732e+00   9.36802509e-01\n   6.25879072e+00   8.30602552e-01\n'
                         '   6.30771715e+00   7.58839917e-01\n   6.35248091e+00   6.95279801e-01\n'
                         '   6.39354951e+00   6.38728970e-01\n   6.43132359e+00   5.88203738e-01\n'
                         '   6.48742220e+00   5.15801344e-01\n   6.53674756e+00   4.54740746e-01\n'
                         '   6.58033657e+00   4.02806267e-01\n   6.61902826e+00   3.58298541e-01\n'
                         '   6.65219658e+00   3.21336178e-01\n   6.68198896e+00   2.89073786e-01\n'
                         '   6.70882724e+00   2.60770358e-01\n   6.73306796e+00   2.35825386e-01\n'
                         '   6.75501457e+00   2.13748002e-01\n   6.77492693e+00   1.94133747e-01\n'
                         '   6.80951413e+00   1.61006837e-01\n   6.84045673e+00   1.32384478e-01\n'
                         '   6.86597451e+00   1.09500535e-01\n   6.88713332e+00   9.10194496e-02\n'
                         '   6.90475706e+00   7.59678101e-02\n   6.92007640e+00   6.31365932e-02\n'
                         '   6.93282794e+00   5.26350879e-02\n   6.94347223e+00   4.39935252e-02\n'
                         '   6.95237853e+00   3.68500030e-02\n   6.96637130e+00   2.57869723e-02\n'
                         '   6.97618927e+00   1.81415260e-02\n   6.98317459e+00   1.27606019e-02\n'
                         '   6.98809463e+00   8.99989410e-03\n   6.99404732e+00   4.48222983e-03\n'
                         '   6.99702366e+00   2.23668561e-03\n   7.00000000e+00   0.00000000e+00\n')
        self.assertEqual((self.pXY3 * self.pXY4 - tXY3 * tXY4).toString(),
                         '   1.00000000e+00   0.00000000e+00\n   1.00112146e+00   1.00049809e-05\n'
                         '   1.00224292e+00   1.66561663e-05\n   1.00448584e+00   1.98971505e-05\n'
                         '   1.00781250e+00  -5.14160730e-06\n   1.00897168e+00   1.02832146e-05\n'
                         '   1.01267824e+00   1.91175481e-05\n   1.01562500e+00  -9.10887839e-06\n'
                         '   1.01794337e+00   1.27503893e-05\n   1.02206816e+00  -1.79817980e-05\n'
                         '   1.02533774e+00   2.57741133e-05\n   1.03125000e+00  -3.65514037e-05\n'
                         '   1.03588673e+00   7.47289089e-06\n   1.03709549e+00  -8.85327423e-06\n'
                         '   1.04258871e+00   1.09310167e-05\n   1.04408114e+00  -1.29787976e-05\n'
                         '   1.05060345e+00   1.60482260e-05\n   1.05244883e+00  -1.91052757e-05\n'
                         '   1.06021358e+00   2.36713073e-05\n   1.06250000e+00  -2.82707146e-05\n'
                         '   1.07177346e+00   2.83797770e-05\n   1.07406870e+00  -2.70951756e-05\n'
                         '   1.08292241e+00   5.94216361e-05\n   1.08795603e+00  -5.37067391e-05\n'
                         '   1.09595823e+00   9.32812770e-05\n   1.10470095e+00  -2.52274290e-05\n'
                         '   1.10686510e+00   5.23288897e-05\n   1.11914645e+00   1.12743281e-04\n'
                         '   1.12500000e+00  -6.25067679e-05\n   1.13300883e+00   1.56976736e-04\n'
                         '   1.14770917e+00  -1.93883994e-05\n   1.14869835e+00   1.59360336e-05\n'
                         '   1.16078111e+00  -1.91139188e-04\n   1.17264549e+00   4.01959565e-05\n'
                         '   1.17518645e+00  -8.78766189e-05\n   1.19109494e+00  -2.46718214e-04\n'
                         '   1.20112443e+00   1.01367160e-04\n   1.20870461e+00  -2.26796945e-04\n'
                         '   1.22824801e+00  -1.04747715e-04\n   1.23114441e+00   7.28178148e-05\n'
                         '   1.24953878e+00   1.30928746e-05\n   1.25000000e+00  -1.21254811e-05\n'
                         '   1.26971766e+00   3.24067973e-05\n   1.27095032e+00  -3.44472876e-05\n'
                         '   1.29190950e+00   6.03576457e-05\n   1.29406933e+00  -6.42559853e-05\n'
                         '   1.31638220e+00   9.74303860e-05\n   1.31950791e+00   5.06088704e-06\n'
                         '   1.31965712e+00  -4.12135024e-06\n   1.34037312e+00   2.12604759e-04\n'
                         '   1.34807024e+00  -1.52972553e-04\n   1.36297573e+00   3.33085950e-04\n'
                         '   1.37973562e+00  -1.73802173e-04\n   1.38751322e+00   2.86793159e-04\n'
                         '   1.41421356e+00   4.39186955e-05\n   1.41516893e+00  -3.50695179e-05\n'
                         '   1.44269991e+00   4.51469433e-04\n   1.45499885e+00  -3.66786420e-04\n'
                         '   1.47736579e+00   6.75010568e-04\n   1.50000000e+00  -4.74309372e-04\n'
                         '   1.51571657e+00   5.09556329e-04\n   1.54003277e+00  -2.29330534e-04\n'
                         '   1.54710616e+00   3.52854919e-04\n   1.58113883e+00   1.85304872e-04\n'
                         '   1.58451981e+00  -1.80251106e-04\n   1.62450479e+00   5.15857669e-04\n'
                         '   1.63418076e+00  -5.34940938e-04\n   1.67564492e+00   7.87986653e-04\n'
                         '   1.68989795e+00  -8.16492681e-04\n   1.73286211e+00   1.14015785e-03\n'
                         '   1.74110113e+00   7.96314877e-04\n   1.75276517e+00  -7.35694674e-04\n'
                         '   1.80007046e+00   1.51910798e-03\n   1.82415510e+00  -1.34587810e-03\n'
                         '   1.86357392e+00  -2.11006421e-04\n   1.86606598e+00   1.32073990e-04\n'
                         '   1.89914448e+00   3.16333318e-04\n   1.90581432e+00  -3.71433287e-04\n'
                         '   1.94758069e+00   2.00184886e-04\n   1.95117541e+00  -2.34014744e-04\n'
                         '   2.00000000e+00   0.00000000e+00\n   2.08138302e+00   1.11646461e-03\n'
                         '   2.10196098e+00  -5.70502702e-04\n   2.14354693e+00   2.04978030e-03\n'
                         '   2.21748226e+00  -3.13616841e-03\n   2.28110884e+00   2.88389872e-03\n'
                         '   2.29739671e+00   2.75439508e-03\n   2.34909690e+00  -9.48024202e-04\n'
                         '   2.37660234e+00   2.26273755e-03\n   2.46228883e+00   2.84573348e-03\n'
                         '   2.50000000e+00   0.00000000e+00\n   2.54599844e+00   2.59685347e-03\n'
                         '   2.59284322e+00   8.92266779e-04\n   2.60245369e+00  -3.51379168e-04\n'
                         '   2.63901582e+00   2.89681817e-03\n   2.64054992e+00   2.95992149e-03\n'
                         '   2.68913439e+00   2.52340041e-03\n   2.71824584e+00  -5.92911357e-04\n'
                         '   2.73861279e+00   2.26386193e-03\n   2.78900155e+00   4.29946635e-03\n'
                         '   2.82842712e+00   2.35119831e-03\n   2.84031744e+00   1.15345985e-03\n'
                         '   2.84976649e+00  -4.04523224e-04\n   2.89257751e+00   4.59886693e-03\n'
                         '   2.94579913e+00   5.20505270e-03\n   3.00000000e+00   0.00000000e+00\n'
                         '   3.03143313e+00  -2.68388369e-03\n   3.24900959e+00  -9.44427823e-04\n'
                         '   3.25912355e+00   2.33071619e-05\n   3.26526876e+00  -5.71270018e-04\n'
                         '   3.48220225e+00  -2.59034246e-03\n   3.51316702e+00   4.74066757e-04\n'
                         '   3.55399336e+00  -3.16289257e-03\n   3.73213197e+00  -2.33633124e-03\n'
                         '   3.76058500e+00   1.14875023e-03\n   3.86824783e+00  -5.31930437e-03\n'
                         '   4.00000000e+00   0.00000000e+00\n   4.15485616e+00  -4.29210450e-03\n'
                         '   4.21028960e+00   2.40103511e-03\n   4.23022820e+00   2.51324602e-03\n'
                         '   4.29691728e+00  -1.98852944e-03\n   4.35655311e+00   2.12103269e-03\n'
                         '   4.42768594e+00  -1.63682745e-03\n   4.47370766e+00   1.71961755e-03\n'
                         '   4.54843835e+00  -1.27555360e-03\n   4.58257569e+00   1.32606101e-03\n'
                         '   4.66026546e+00  -2.75548566e-03\n   4.73120108e+00   1.16704299e-03\n'
                         '   4.76410537e+00  -1.66974814e-03\n   4.86076920e+00  -3.12737461e-04\n'
                         '   4.86559658e+00   2.06045528e-04\n   4.95096189e+00  -1.57151246e-03\n'
                         '   4.98778042e+00   2.32951047e-03\n   5.00351505e+00   2.91158950e-03\n'
                         '   5.11432055e+00  -2.32024428e-03\n   5.15620014e+00   2.13719549e-03\n'
                         '   5.25826396e+00  -1.69623226e-03\n   5.29150262e+00   1.57017213e-03\n'
                         '   5.38598130e+00  -2.02341342e-03\n   5.42881453e+00   1.52455189e-03\n'
                         '   5.50000000e+00  -5.68127499e-04\n   5.51596189e+00   4.57108651e-04\n'
                         '   5.57323688e+00  -6.53766001e-04\n   5.59606590e+00   5.16079865e-04\n'
                         '   5.64127852e+00  -9.98550267e-04\n   5.68544983e+00   4.23808152e-04\n'
                         '   5.70463912e+00  -5.95703060e-04\n   5.76376735e+00  -1.15863155e-04\n'
                         '   5.76672615e+00   1.54044441e-04\n   5.84090783e+00   1.15496337e-03\n'
                         '   5.87085224e+00  -5.68852839e-04\n   5.90884616e+00   1.06966016e-03\n'
                         '   5.91815895e+00   1.11156870e-03\n   5.96515308e+00  -1.44849038e-04\n'
                         '   5.97131764e+00   2.38603060e-04\n   6.02087366e+00   7.76054162e-04\n'
                         '   6.04872887e+00  -8.59993172e-04\n   6.11047626e+00   3.93455347e-04\n'
                         '   6.12322029e+00  -4.20406652e-04\n   6.18919732e+00   2.48577400e-05\n'
                         '   6.18995084e+00  -2.59363590e-05\n   6.25000000e+00  -2.67249824e-04\n'
                         '   6.25879072e+00   2.58056091e-04\n   6.30771715e+00   2.82368829e-04\n'
                         '   6.31750172e+00  -1.71128244e-04\n   6.35248091e+00   4.33142044e-04\n'
                         '   6.37724661e+00  -2.01876315e-04\n   6.39354951e+00   3.00356901e-04\n'
                         '   6.43039656e+00  -1.70790961e-05\n   6.43132359e+00   2.15862962e-05\n'
                         '   6.47789464e+00  -2.21854326e-04\n   6.48742220e+00   1.57643615e-04\n'
                         '   6.52051432e+00  -2.68596059e-04\n   6.53674756e+00   1.79770546e-04\n'
                         '   6.55889601e+00  -2.37437647e-04\n   6.58033657e+00   1.41914567e-04\n'
                         '   6.59357452e+00  -1.68477655e-04\n   6.61902826e+00   7.60015695e-05\n'
                         '   6.62500000e+00  -8.12054794e-05\n   6.65219658e+00   7.38578256e-05\n'
                         '   6.65762798e+00  -6.61571899e-05\n   6.68198896e+00   6.03435559e-05\n'
                         '   6.68694308e+00  -5.42083268e-05\n   6.70882724e+00   4.95714643e-05\n'
                         '   6.71335759e+00  -4.46474472e-05\n   6.73306796e+00   4.09222706e-05\n'
                         '   6.73722032e+00  -3.69440630e-05\n   6.75501457e+00   3.39315962e-05\n'
                         '   6.75882834e+00  -3.06981604e-05\n   6.77492693e+00   2.82474640e-05\n'
                         '   6.77843624e+00  -5.45309700e-05\n   6.80951413e+00   4.63972898e-05\n'
                         '   6.81250000e+00  -4.17376021e-05\n   6.84045673e+00   3.48319312e-05\n'
                         '   6.84294858e+00  -2.86885321e-05\n   6.86597451e+00   2.40787223e-05\n'
                         '   6.86806595e+00  -1.99391721e-05\n   6.88713332e+00   1.68137969e-05\n'
                         '   6.88889694e+00  -1.39856096e-05\n   6.90475706e+00   1.18390692e-05\n'
                         '   6.90625000e+00  -1.03209607e-05\n   6.92007640e+00   9.54152229e-05\n'
                         '   6.93282794e+00   1.39580650e-05\n   6.93387829e+00  -5.03849390e-06\n'
                         '   6.94347223e+00   4.63040501e-05\n   6.95237853e+00   6.90491794e-06\n'
                         '   6.95312500e+00  -4.94396717e-06\n   6.96637130e+00   6.74978512e-05\n'
                         '   6.97618927e+00   4.30418314e-06\n   6.97656250e+00  -1.23392881e-06\n'
                         '   6.98317459e+00   5.56255816e-05\n   6.98809463e+00   6.86471378e-05\n'
                         '   6.99404732e+00   5.20407892e-05\n   6.99702366e+00   3.04496997e-05\n'
                         '   7.00000000e+00   0.00000000e+00\n')
        r = self.pXY3 * self.pXY4 / (tXY3 * tXY4)
        self.assertEqual(r.toXML(indent='    ', pairsPerLine=5),
                         '    <xData length="215" accuracy="0.001">\n      <axes>\n'
                         '        <axis index="0" label="energy_in" unit="eV" interpolation="lin,lin"/>\n'
                         '        <axis index="1" label="crossSection" unit=""/></axes>\n'
                         '      <data> 1 1.00668354431791 1.00112146035213 1.00668354431791 1.00224292070426 '
                         '1.00555711512717 1.00448584140852 1.00331180237127 1.0078125 0.999510471766564\n'
                         '             1.00897168281704 1.00085199544682 1.01267824359083 1.00111676780327 '
                         '1.015625 0.999569685643884 1.01794336563407 1.00052354881939 1.02206816450916 '
                         '0.999402430112613\n             1.02533774173737 1.00074406375236 1.03125 '
                         '0.99915007214283 1.03588673126815 1.00015076611082 1.03709548541904 '
                         '0.999827435909192 1.04258870806098 1.00018463513102\n             '
                         '1.04408114029402 0.999788545560657 1.05060344526291 1.00022639633327 1.05244883114563 '
                         '0.999740483457052 1.06021357938331 1.00027809661291 1.0625 0.999680809138963\n             '
                         '1.07177346253629 1.00027669629492 1.07406870367714 0.9997446266895 1.08292240595953 '
                         '1.00049629126927 1.08795603208456 0.999579244013996 1.09595822638522 1.00066524180494\n'
                         '             1.10470094808518 0.99983644347414 1.10686509929378 1.00033179680221 '
                         '1.11914645080922 1.00063413817904 1.125 0.999666741669274 1.13300882924296 1.00078123698238\n'
                         '             1.14770917415658 0.999914231730601 1.14869835499703 1.00006997281366 '
                         '1.16078110542007 0.999232475582149 1.1726454894629 1.00014890924344 1.17518645301135 '
                         '0.999679971764221\n             1.19109493916226 0.999187704604619 1.20112443398143 '
                         '1.00031470649328 1.20870461334278 0.999326165110924 1.22824801122864 0.999719849716428 '
                         '1.23114441334492 1.00019191393284\n             1.24953878347605 1.00003149259721 1.25 '
                         '0.999970899692202 1.26971766048275 1.00007097098476 1.27095031675892 0.999924982000874 '
                         '1.29190949751412 1.00012003647645\n             1.29406932593601 0.999873377003641 '
                         '1.31638220433424 1.00017545333848 1.31950791077289 1.00000900314601 1.31965711975226 '
                         '0.999992672562592 1.34037311615913 1.00034950491396\n             1.34807023901482 '
                         '0.999755550479247 1.36297573253887 1.00050495405431 1.37973562459275 0.999751268258853 '
                         '1.38751321824038 1.00040004274691 1.41421356237309 1.00005623042722\n             '
                         '1.41516892756513 0.999955235010117 1.44269990590721 1.00053015661161 1.45499885404707 '
                         '0.999584643383768 1.47736579242164 1.00071784801211 1.5 0.999525915490972\n             '
                         '1.5157165665104 1.00048890489313 1.54003277111879 0.999793232031461 1.54710615709339 '
                         '1.00031265524825 1.58113883008419 1.00015125098185 1.5845198074299 0.999854058464932\n'
                         '             1.62450479271247 1.00038135933572 1.63418075605966 0.999613022377744 '
                         '1.67564491718044 1.00052201095484 1.68989794855664 0.999475023125493 1.73286210788787 '
                         '1.00067334861732\n             1.74110112659225 1.00046285464128 1.7527651713035 '
                         '0.999581982905061 1.80007046024039 1.00079110142512 1.82415510296892 0.999329027412814 '
                         '1.8635739169048 0.999901674063664\n             1.86606598307361 1.00006129154699 '
                         '1.89914448233093 1.00013893725393 1.90581432257351 0.999838656215839 1.94758068503881 '
                         '1.00008135437074 1.95117541188947 0.999905440212956\n             2 1 2.08138301850468 '
                         '1.00037944542616 2.10196098363072 0.999810718133661 2.14354692507259 1.00064889185447 '
                         '2.21748225867393 0.999084671414527\n             2.2811088413887 1.00078873109929 '
                         '2.29739670999407 1.0007410359095 2.34909690379139 0.999757694535185 2.37660233847416 '
                         '1.000563352014 2.46228882668983 1.00065417605575\n             2.5 1 2.54599844036756 '
                         '1.00054611879802 2.59284322334162 1.00017776867638 2.60245369082114 0.999930753766937 '
                         '2.63901582154579 1.00054823356961\n             2.64054992109815 1.00055923770341 '
                         '2.68913439233143 1.00045254581058 2.71824583655185 0.99989685944299 2.73861278752583 '
                         '1.00038571200322 2.78900155432457 1.00069649200506\n             2.82842712474619 '
                         '1.0003665606524 2.84031744299722 1.00017779558364 2.84976648596235 0.999938207302451 '
                         '2.89257751200788 1.00067498442361 2.94579913368574 1.0007279150467\n             3 1 '
                         '3.0314331330208 0.999641567801692 3.24900958542494 0.999872087147169 3.25912355027679 '
                         '1.00000315916827 3.26526875967051 0.999922530586994\n             3.4822022531845 '
                         '0.999641821100971 3.51316701949486 1.00006576646539 3.55399335762673 0.999559311511263 '
                         '3.73213196614723 0.999667399836153 3.76058499822597 1.00016418461645\n             '
                         '3.86824782757836 0.999228159186265 4 1 4.1548561593768 0.999306110301353 4.21028959535164 '
                         '1.00040127435898 4.23022820135301 1.00042502683004\n             4.29691728011311 '
                         '0.999650068734444 4.35655311486348 1.00038729776677 4.42768593951169 0.999687584956666 '
                         '4.47370765888058 1.00033812162954 4.54843835433528 0.999736729148818\n             '
                         '4.58257569495584 1.00028005285456 4.66026546142249 0.999386952621817 4.73120107580139 '
                         '1.0002729718574 4.76410536511896 0.999600366931553 4.86076919655937 0.999919664450716\n'
                         '             4.86559657939181 1.0000531231168 4.95096189432334 0.999567984365945 '
                         '4.98778041852156 1.0006592310144 5.00351505428169 1.00083418511812 5.11432055114385 '
                         '0.999273669225814\n             5.15620013920406 1.00069329838888 5.25826396487047 '
                         '0.999399525640673 5.29150262212918 1.00057287682765 5.38598129622604 0.999195482854598 '
                         '5.42881452689825 1.00063188596298\n             5.5 0.999747562630253 5.51596189429635 '
                         '1.00020644293232 5.5732368821658 0.999686976521419 5.59606590491607 1.00025317069514 '
                         '5.64127851613973 0.999486104989911\n             5.68544983205959 1.0002290936983 5'
                         '.70463912464279 0.999671081502426 5.76376734554662 0.999931499717169 5.76672615131698 '
                         '1.00009139729789 5.84090782554842 1.00074945720742\n             5.87085224304475 '
                         '0.999616912702979 5.90884615890877 1.00075665277794 5.9181589519015 1.00079592720309 '
                         '5.96515307716505 0.999889574391638 5.97131763655108 1.00018345537125\n             '
                         '6.02087365942282 1.00063941767095 6.04872886591051 0.999262929371427 6.11047625752197 '
                         '1.00037021716649 6.12322028885515 0.999596684457689 6.18919731619399 1.00002653466416\n'
                         '            6.18995084332182 0.99997227992697 6.25 0.999683359760273 6.25879072460587 '
                         '1.00031068540633 6.30771714528469 1.00037210592532 6.3175017189294 0.999770281252257\n'
                         '             6.35248091171807 1.00062297515784 6.3772466086523 0.999694671673299 '
                         '6.3935495066361 1.00047024155039 6.43039656311088 0.999971025059211 6.4313235894613 '
                         '1.00003669867225\n             6.47789464147778 0.999579899226441 6.48742220491392 '
                         '1.00030562854549 6.52051432037161 0.999434339447555 6.53674755629506 1.00039532535321 '
                         '6.55889601109599 0.999445694751864\n             6.5803365720297 1.00035231469484 '
                         '6.59357452486162 0.999565306921687 6.6190282573986 1.0002121179986 6.625 0.999769068866862 '
                         '6.65219657720945 1.00022984597056\n             6.65762798315705 0.999790279750476 '
                         '6.68198896465781 1.00020874793527 6.68694307998582 0.999809024215276 6.70882724018998 '
                         '1.00019009623894 6.71335759125661 0.999825669719921\n             6.73306796097049 '
                         '1.00017352784313 6.73722032048298 0.999840516569379 6.75501457113419 1.00015874579368 '
                         '6.75882834186989 0.999853812245619 6.77492692908429 1.00014550517076\n             '
                         '6.77843623876513 0.999714157224784 6.8095141286993 1.00028816968688 6.8125 0.999736246716249 '
                         '6.84045673218617 1.00026311189778 6.84294857787223 0.99977957303408\n             '
                         '6.86597450780166 1.00021989593226 6.86806595187316 0.999814818671899 6.88713332482796 '
                         '1.00018472751648 6.88889694448429 0.999843759287124 6.90475706434965 1.00015584323363\n'
                         '             6.90625 0.999861866616017 6.92007639727403 1.00151125073631 6.93282793990062 '
                         '1.00026518555593 6.93387828955896 0.999902698645992 6.94347222593892 1.00105251965923\n'
                         '             6.95237853217482 1.00018737903336 6.953125 0.999863651660681 6.96637129675557 '
                         '1.0026175175014 6.97618926608741 1.0002372558486 6.9765625 0.999930887889438\n'
                         '             6.98317459372664 1.00435916599188 6.98809463304371 1.00762754951186 '
                         '6.99404731652185 1.0116104687177 6.99702365826093 1.01361375937378 7 '
                         '1.01361375937378</data></xData>')
        rm1 = self.pXY3 * self.pXY4 / (tXY3 * tXY4) - 1
        self.assertEqual(rm1.toString(),
                         '   1.00000000e+00   6.68354432e-03\n   1.00112146e+00   6.68354432e-03\n'
                         '   1.00224292e+00   5.55711513e-03\n   1.00448584e+00   3.31180237e-03\n'
                         '   1.00781250e+00  -4.89528233e-04\n   1.00897168e+00   8.51995447e-04\n'
                         '   1.01267824e+00   1.11676780e-03\n   1.01562500e+00  -4.30314356e-04\n'
                         '   1.01794337e+00   5.23548819e-04\n   1.02206816e+00  -5.97569887e-04\n'
                         '   1.02533774e+00   7.44063752e-04\n   1.03125000e+00  -8.49927857e-04\n'
                         '   1.03588673e+00   1.50766111e-04\n   1.03709549e+00  -1.72564091e-04\n'
                         '   1.04258871e+00   1.84635131e-04\n   1.04408114e+00  -2.11454439e-04\n'
                         '   1.05060345e+00   2.26396333e-04\n   1.05244883e+00  -2.59516543e-04\n'
                         '   1.06021358e+00   2.78096613e-04\n   1.06250000e+00  -3.19190861e-04\n'
                         '   1.07177346e+00   2.76696295e-04\n   1.07406870e+00  -2.55373310e-04\n'
                         '   1.08292241e+00   4.96291269e-04\n   1.08795603e+00  -4.20755986e-04\n'
                         '   1.09595823e+00   6.65241805e-04\n   1.10470095e+00  -1.63556526e-04\n'
                         '   1.10686510e+00   3.31796802e-04\n   1.11914645e+00   6.34138179e-04\n'
                         '   1.12500000e+00  -3.33258331e-04\n   1.13300883e+00   7.81236982e-04\n'
                         '   1.14770917e+00  -8.57682694e-05\n   1.14869835e+00   6.99728137e-05\n'
                         '   1.16078111e+00  -7.67524418e-04\n   1.17264549e+00   1.48909243e-04\n'
                         '   1.17518645e+00  -3.20028236e-04\n   1.19109494e+00  -8.12295395e-04\n'
                         '   1.20112443e+00   3.14706493e-04\n   1.20870461e+00  -6.73834889e-04\n'
                         '   1.22824801e+00  -2.80150284e-04\n   1.23114441e+00   1.91913933e-04\n'
                         '   1.24953878e+00   3.14925972e-05\n   1.25000000e+00  -2.91003078e-05\n'
                         '   1.26971766e+00   7.09709848e-05\n   1.27095032e+00  -7.50179991e-05\n'
                         '   1.29190950e+00   1.20036476e-04\n   1.29406933e+00  -1.26622996e-04\n'
                         '   1.31638220e+00   1.75453338e-04\n   1.31950791e+00   9.00314601e-06\n'
                         '   1.31965712e+00  -7.32743741e-06\n   1.34037312e+00   3.49504914e-04\n'
                         '   1.34807024e+00  -2.44449521e-04\n   1.36297573e+00   5.04954054e-04\n'
                         '   1.37973562e+00  -2.48731741e-04\n   1.38751322e+00   4.00042747e-04\n'
                         '   1.41421356e+00   5.62304272e-05\n   1.41516893e+00  -4.47649899e-05\n'
                         '   1.44269991e+00   5.30156612e-04\n   1.45499885e+00  -4.15356616e-04\n'
                         '   1.47736579e+00   7.17848012e-04\n   1.50000000e+00  -4.74084509e-04\n'
                         '   1.51571657e+00   4.88904893e-04\n   1.54003277e+00  -2.06767969e-04\n'
                         '   1.54710616e+00   3.12655248e-04\n   1.58113883e+00   1.51250982e-04\n'
                         '   1.58451981e+00  -1.45941535e-04\n   1.62450479e+00   3.81359336e-04\n'
                         '   1.63418076e+00  -3.86977622e-04\n   1.67564492e+00   5.22010955e-04\n'
                         '   1.68989795e+00  -5.24976875e-04\n   1.73286211e+00   6.73348617e-04\n'
                         '   1.74110113e+00   4.62854641e-04\n   1.75276517e+00  -4.18017095e-04\n'
                         '   1.80007046e+00   7.91101425e-04\n   1.82415510e+00  -6.70972587e-04\n'
                         '   1.86357392e+00  -9.83259363e-05\n   1.86606598e+00   6.12915470e-05\n'
                         '   1.89914448e+00   1.38937254e-04\n   1.90581432e+00  -1.61343784e-04\n'
                         '   1.94758069e+00   8.13543707e-05\n   1.95117541e+00  -9.45597870e-05\n'
                         '   2.00000000e+00   0.00000000e+00\n   2.08138302e+00   3.79445426e-04\n'
                         '   2.10196098e+00  -1.89281866e-04\n   2.14354693e+00   6.48891854e-04\n'
                         '   2.21748226e+00  -9.15328585e-04\n   2.28110884e+00   7.88731099e-04\n'
                         '   2.29739671e+00   7.41035909e-04\n   2.34909690e+00  -2.42305465e-04\n'
                         '   2.37660234e+00   5.63352014e-04\n   2.46228883e+00   6.54176056e-04\n'
                         '   2.50000000e+00   0.00000000e+00\n   2.54599844e+00   5.46118798e-04\n'
                         '   2.59284322e+00   1.77768676e-04\n   2.60245369e+00  -6.92462331e-05\n'
                         '   2.63901582e+00   5.48233570e-04\n   2.64054992e+00   5.59237703e-04\n'
                         '   2.68913439e+00   4.52545811e-04\n   2.71824584e+00  -1.03140557e-04\n'
                         '   2.73861279e+00   3.85712003e-04\n   2.78900155e+00   6.96492005e-04\n'
                         '   2.82842712e+00   3.66560652e-04\n   2.84031744e+00   1.77795584e-04\n'
                         '   2.84976649e+00  -6.17926975e-05\n   2.89257751e+00   6.74984424e-04\n'
                         '   2.94579913e+00   7.27915047e-04\n   3.00000000e+00   0.00000000e+00\n'
                         '   3.03143313e+00  -3.58432198e-04\n   3.24900959e+00  -1.27912853e-04\n'
                         '   3.25912355e+00   3.15916827e-06\n   3.26526876e+00  -7.74694130e-05\n'
                         '   3.48220225e+00  -3.58178899e-04\n   3.51316702e+00   6.57664654e-05\n'
                         '   3.55399336e+00  -4.40688489e-04\n   3.73213197e+00  -3.32600164e-04\n'
                         '   3.76058500e+00   1.64184616e-04\n   3.86824783e+00  -7.71840814e-04\n'
                         '   4.00000000e+00   0.00000000e+00\n   4.15485616e+00  -6.93889699e-04\n'
                         '   4.21028960e+00   4.01274359e-04\n   4.23022820e+00   4.25026830e-04\n'
                         '   4.29691728e+00  -3.49931266e-04\n   4.35655311e+00   3.87297767e-04\n'
                         '   4.42768594e+00  -3.12415043e-04\n   4.47370766e+00   3.38121630e-04\n'
                         '   4.54843835e+00  -2.63270851e-04\n   4.58257569e+00   2.80052855e-04\n'
                         '   4.66026546e+00  -6.13047378e-04\n   4.73120108e+00   2.72971857e-04\n'
                         '   4.76410537e+00  -3.99633068e-04\n   4.86076920e+00  -8.03355493e-05\n'
                         '   4.86559658e+00   5.31231168e-05\n   4.95096189e+00  -4.32015634e-04\n'
                         '   4.98778042e+00   6.59231014e-04\n   5.00351505e+00   8.34185118e-04\n'
                         '   5.11432055e+00  -7.26330774e-04\n   5.15620014e+00   6.93298389e-04\n'
                         '   5.25826396e+00  -6.00474359e-04\n   5.29150262e+00   5.72876828e-04\n'
                         '   5.38598130e+00  -8.04517145e-04\n   5.42881453e+00   6.31885963e-04\n'
                         '   5.50000000e+00  -2.52437370e-04\n   5.51596189e+00   2.06442932e-04\n'
                         '   5.57323688e+00  -3.13023479e-04\n   5.59606590e+00   2.53170695e-04\n'
                         '   5.64127852e+00  -5.13895010e-04\n   5.68544983e+00   2.29093698e-04\n'
                         '   5.70463912e+00  -3.28918498e-04\n   5.76376735e+00  -6.85002828e-05\n'
                         '   5.76672615e+00   9.13972979e-05\n   5.84090783e+00   7.49457207e-04\n'
                         '   5.87085224e+00  -3.83087297e-04\n   5.90884616e+00   7.56652778e-04\n'
                         '   5.91815895e+00   7.95927203e-04\n   5.96515308e+00  -1.10425608e-04\n'
                         '   5.97131764e+00   1.83455371e-04\n   6.02087366e+00   6.39417671e-04\n'
                         '   6.04872887e+00  -7.37070629e-04\n   6.11047626e+00   3.70217166e-04\n'
                         '   6.12322029e+00  -4.03315542e-04\n   6.18919732e+00   2.65346642e-05\n'
                         '   6.18995084e+00  -2.77200730e-05\n   6.25000000e+00  -3.16640240e-04\n'
                         '   6.25879072e+00   3.10685406e-04\n   6.30771715e+00   3.72105925e-04\n'
                         '   6.31750172e+00  -2.29718748e-04\n   6.35248091e+00   6.22975158e-04\n'
                         '   6.37724661e+00  -3.05328327e-04\n   6.39354951e+00   4.70241550e-04\n'
                         '   6.43039656e+00  -2.89749408e-05\n   6.43132359e+00   3.66986723e-05\n'
                         '   6.47789464e+00  -4.20100774e-04\n   6.48742220e+00   3.05628545e-04\n'
                         '   6.52051432e+00  -5.65660552e-04\n   6.53674756e+00   3.95325353e-04\n'
                         '   6.55889601e+00  -5.54305248e-04\n   6.58033657e+00   3.52314695e-04\n'
                         '   6.59357452e+00  -4.34693078e-04\n   6.61902826e+00   2.12117999e-04\n'
                         '   6.62500000e+00  -2.30931133e-04\n   6.65219658e+00   2.29845971e-04\n'
                         '   6.65762798e+00  -2.09720250e-04\n   6.68198896e+00   2.08747935e-04\n'
                         '   6.68694308e+00  -1.90975785e-04\n   6.70882724e+00   1.90096239e-04\n'
                         '   6.71335759e+00  -1.74330280e-04\n   6.73306796e+00   1.73527843e-04\n'
                         '   6.73722032e+00  -1.59483431e-04\n   6.75501457e+00   1.58745794e-04\n'
                         '   6.75882834e+00  -1.46187754e-04\n   6.77492693e+00   1.45505171e-04\n'
                         '   6.77843624e+00  -2.85842775e-04\n   6.80951413e+00   2.88169687e-04\n'
                         '   6.81250000e+00  -2.63753284e-04\n   6.84045673e+00   2.63111898e-04\n'
                         '   6.84294858e+00  -2.20426966e-04\n   6.86597451e+00   2.19895932e-04\n'
                         '   6.86806595e+00  -1.85181328e-04\n   6.88713332e+00   1.84727516e-04\n'
                         '   6.88889694e+00  -1.56240713e-04\n   6.90475706e+00   1.55843234e-04\n'
                         '   6.90625000e+00  -1.38133384e-04\n   6.92007640e+00   1.51125074e-03\n'
                         '   6.93282794e+00   2.65185556e-04\n   6.93387829e+00  -9.73013540e-05\n'
                         '   6.94347223e+00   1.05251966e-03\n   6.95237853e+00   1.87379033e-04\n'
                         '   6.95312500e+00  -1.36348339e-04\n   6.96637130e+00   2.61751750e-03\n'
                         '   6.97618927e+00   2.37255849e-04\n   6.97656250e+00  -6.91121106e-05\n'
                         '   6.98317459e+00   4.35916599e-03\n   6.98809463e+00   7.62754951e-03\n'
                         '   6.99404732e+00   1.16104687e-02\n   6.99702366e+00   1.36137594e-02\n'
                         '   7.00000000e+00   1.36137594e-02\n')

    def test_integrate(self):
        self.assertEqual(self.pXY1.integrate(), float(PhysicalQuantity(3.5, 'eV*b')))
        self.assertEqual(self.pXY1.integrate(2, 4), float(PhysicalQuantity(3.0, 'eV*b')))
        self.assertEqual(self.pXY2.integrate(), float(PhysicalQuantity(3.0, 'eV*b')))
        self.assertEqual(self.pXY3.integrate(1.0, 2.0), float(PhysicalQuantity(1.5, 'eV*b')))
        self.assertEqual(self.pXY4.integrate(), float(PhysicalQuantity(8.75, 'eV*b')))

    def test_indefiniteIntegral(self):
        self.assertEqual(self.pXY1.indefiniteIntegral().toString(),
                         '   1.00000000e+00   0.00000000e+00\n   3.00000000e+00   2.00000000e+00\n'
                         '   4.00000000e+00   3.50000000e+00\n')


class TestLevelDensity(unittest.TestCase):

    def setUp(self):
        self.ld = LevelDensity(data=[[1, 1], [3, 2], [4, 8]])

    def test_get_mean_level_spacing(self):
        self.assertAlmostEqual(self.ld.get_mean_level_spacing().evaluate(3.0), 0.5)

    def test_total_number_levels(self):
        self.assertAlmostEqual(self.ld.total_number_levels, 8)

    def test_get_CLD(self):
        cld = self.ld.get_CLD()
        self.assertAlmostEqual(cld.evaluate(1.0), 0.0)
        self.assertAlmostEqual(cld.evaluate(3.0), 3.0)
        self.assertAlmostEqual(cld.evaluate(4.0), 8.0)

    def test_get_CLD_normed(self):
        cld = self.ld.get_CLD()
        ncld = self.ld.get_CLD(normalize=True)
        t = self.ld.total_number_levels
        self.assertAlmostEqual(cld.evaluate(1.0), t * ncld.evaluate(1.0))
        self.assertAlmostEqual(cld.evaluate(3.0), t * ncld.evaluate(3.0))
        self.assertAlmostEqual(cld.evaluate(4.0), t * ncld.evaluate(4.0))

    def test_get_CLD_inverse(self):
        icld = self.ld.get_CLD_inverse()
        self.assertAlmostEqual(icld.evaluate(0.0), 1.0)
        self.assertAlmostEqual(icld.evaluate(3.0), 3.0)  # not sure about this value
        self.assertAlmostEqual(icld.evaluate(8.0), 4.0)

    def test_get_CLD_inverse_normed(self):
        icld = self.ld.get_CLD_inverse(normalize=True)
        self.assertAlmostEqual(icld.evaluate(0.0), 1.0)
        self.assertAlmostEqual(icld.evaluate(0.4), 3.04)  # not sure about this value
        self.assertAlmostEqual(icld.evaluate(1.0), 4.0)

    def test_evaluate_mean_level_spacing(self):
        self.assertAlmostEqual(self.ld.evaluate_mean_level_spacing(3.0),
                               self.ld.get_mean_level_spacing().evaluate(3.0))


class TestNuclearLevelDensityHFBM(unittest.TestCase):

    def setUp(self):
        self.a = NuclearLevelDensityHFBM()


# ---------------------------------------------------------------------------------
#
#    Main !!
#
# ---------------------------------------------------------------------------------


if __name__ == "__main__":
    unittest.main()
    print()
